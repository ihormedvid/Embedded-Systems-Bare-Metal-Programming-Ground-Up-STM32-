
15_InputInterrupt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000013b8  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000044  08001558  08001558  00011558  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800159c  0800159c  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  0800159c  0800159c  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800159c  0800159c  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800159c  0800159c  0001159c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080015a0  080015a0  000115a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  080015a4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08001600  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08001600  000201c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000176f  00000000  00000000  000200cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000006eb  00000000  00000000  0002183e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000198  00000000  00000000  00021f30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000116  00000000  00000000  000220c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001ff2  00000000  00000000  000221de  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000020b0  00000000  00000000  000241d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00055eb1  00000000  00000000  00026280  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000c6c  00000000  00000000  0007c134  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004a  00000000  00000000  0007cda0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000005c 	.word	0x2000005c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001540 	.word	0x08001540

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000060 	.word	0x20000060
 80001dc:	08001540 	.word	0x08001540

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000280:	b480      	push	{r7}
 8000282:	b083      	sub	sp, #12
 8000284:	af00      	add	r7, sp, #0
 8000286:	4603      	mov	r3, r0
 8000288:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800028a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800028e:	2b00      	cmp	r3, #0
 8000290:	db0b      	blt.n	80002aa <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000292:	79fb      	ldrb	r3, [r7, #7]
 8000294:	f003 021f 	and.w	r2, r3, #31
 8000298:	4907      	ldr	r1, [pc, #28]	; (80002b8 <__NVIC_EnableIRQ+0x38>)
 800029a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800029e:	095b      	lsrs	r3, r3, #5
 80002a0:	2001      	movs	r0, #1
 80002a2:	fa00 f202 	lsl.w	r2, r0, r2
 80002a6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 80002aa:	bf00      	nop
 80002ac:	370c      	adds	r7, #12
 80002ae:	46bd      	mov	sp, r7
 80002b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002b4:	4770      	bx	lr
 80002b6:	bf00      	nop
 80002b8:	e000e100 	.word	0xe000e100

080002bc <pc13_exti_init>:


#define GPIOCEN			(1U<<2)
#define SYSCFGEN		(1U<<14)

void pc13_exti_init(void){
 80002bc:	b580      	push	{r7, lr}
 80002be:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80002c0:	b672      	cpsid	i
}
 80002c2:	bf00      	nop

	// Disable global interrupts
	__disable_irq();

	// Enable clock access for GPIOC
	RCC->AHB1ENR |= GPIOCEN;
 80002c4:	4b18      	ldr	r3, [pc, #96]	; (8000328 <pc13_exti_init+0x6c>)
 80002c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c8:	4a17      	ldr	r2, [pc, #92]	; (8000328 <pc13_exti_init+0x6c>)
 80002ca:	f043 0304 	orr.w	r3, r3, #4
 80002ce:	6313      	str	r3, [r2, #48]	; 0x30

	// Set PC13 as input
	GPIOC->MODER &=~ (1U<<26);
 80002d0:	4b16      	ldr	r3, [pc, #88]	; (800032c <pc13_exti_init+0x70>)
 80002d2:	681b      	ldr	r3, [r3, #0]
 80002d4:	4a15      	ldr	r2, [pc, #84]	; (800032c <pc13_exti_init+0x70>)
 80002d6:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 80002da:	6013      	str	r3, [r2, #0]
	GPIOC->MODER &=~ (1U<<27);
 80002dc:	4b13      	ldr	r3, [pc, #76]	; (800032c <pc13_exti_init+0x70>)
 80002de:	681b      	ldr	r3, [r3, #0]
 80002e0:	4a12      	ldr	r2, [pc, #72]	; (800032c <pc13_exti_init+0x70>)
 80002e2:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 80002e6:	6013      	str	r3, [r2, #0]


	// Enable clock access to SYSCFG
	RCC->APB2ENR |= SYSCFGEN;
 80002e8:	4b0f      	ldr	r3, [pc, #60]	; (8000328 <pc13_exti_init+0x6c>)
 80002ea:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80002ec:	4a0e      	ldr	r2, [pc, #56]	; (8000328 <pc13_exti_init+0x6c>)
 80002ee:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80002f2:	6453      	str	r3, [r2, #68]	; 0x44

	// Select PORTC for EXTI13
	SYSCFG->EXTICR[3] |= (1U<<5);
 80002f4:	4b0e      	ldr	r3, [pc, #56]	; (8000330 <pc13_exti_init+0x74>)
 80002f6:	695b      	ldr	r3, [r3, #20]
 80002f8:	4a0d      	ldr	r2, [pc, #52]	; (8000330 <pc13_exti_init+0x74>)
 80002fa:	f043 0320 	orr.w	r3, r3, #32
 80002fe:	6153      	str	r3, [r2, #20]

	// Unmask EXTI13
	EXTI->IMR |= (1U<<13);
 8000300:	4b0c      	ldr	r3, [pc, #48]	; (8000334 <pc13_exti_init+0x78>)
 8000302:	681b      	ldr	r3, [r3, #0]
 8000304:	4a0b      	ldr	r2, [pc, #44]	; (8000334 <pc13_exti_init+0x78>)
 8000306:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800030a:	6013      	str	r3, [r2, #0]

	// Select falling edge trigger
	EXTI->FTSR |= (1U<<13);
 800030c:	4b09      	ldr	r3, [pc, #36]	; (8000334 <pc13_exti_init+0x78>)
 800030e:	68db      	ldr	r3, [r3, #12]
 8000310:	4a08      	ldr	r2, [pc, #32]	; (8000334 <pc13_exti_init+0x78>)
 8000312:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000316:	60d3      	str	r3, [r2, #12]

	// Enable EXTI13 line in NVIC
	NVIC_EnableIRQ(EXTI15_10_IRQn);
 8000318:	2028      	movs	r0, #40	; 0x28
 800031a:	f7ff ffb1 	bl	8000280 <__NVIC_EnableIRQ>
  __ASM volatile ("cpsie i" : : : "memory");
 800031e:	b662      	cpsie	i
}
 8000320:	bf00      	nop

	// Enable global interrupts
	__enable_irq();
}
 8000322:	bf00      	nop
 8000324:	bd80      	pop	{r7, pc}
 8000326:	bf00      	nop
 8000328:	40023800 	.word	0x40023800
 800032c:	40020800 	.word	0x40020800
 8000330:	40013800 	.word	0x40013800
 8000334:	40013c00 	.word	0x40013c00

08000338 <main>:
#define LED				PIN5


static void exti_callback(void);

int main(void) {
 8000338:	b580      	push	{r7, lr}
 800033a:	af00      	add	r7, sp, #0


	// Enable clock access to GPIOA
	RCC->AHB1ENR |= GPIOAEN;
 800033c:	4b0b      	ldr	r3, [pc, #44]	; (800036c <main+0x34>)
 800033e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000340:	4a0a      	ldr	r2, [pc, #40]	; (800036c <main+0x34>)
 8000342:	f043 0301 	orr.w	r3, r3, #1
 8000346:	6313      	str	r3, [r2, #48]	; 0x30

	// Set PA5 as output pin
	GPIOA->MODER |= (1U<<10);
 8000348:	4b09      	ldr	r3, [pc, #36]	; (8000370 <main+0x38>)
 800034a:	681b      	ldr	r3, [r3, #0]
 800034c:	4a08      	ldr	r2, [pc, #32]	; (8000370 <main+0x38>)
 800034e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000352:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &=~ (1U<<11);
 8000354:	4b06      	ldr	r3, [pc, #24]	; (8000370 <main+0x38>)
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	4a05      	ldr	r2, [pc, #20]	; (8000370 <main+0x38>)
 800035a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800035e:	6013      	str	r3, [r2, #0]

	pc13_exti_init();
 8000360:	f7ff ffac 	bl	80002bc <pc13_exti_init>
	uart2_rxtx_init();
 8000364:	f000 f8dc 	bl	8000520 <uart2_rxtx_init>




	while(1){
 8000368:	e7fe      	b.n	8000368 <main+0x30>
 800036a:	bf00      	nop
 800036c:	40023800 	.word	0x40023800
 8000370:	40020000 	.word	0x40020000

08000374 <exti_callback>:



}

static void exti_callback(void) {
 8000374:	b580      	push	{r7, lr}
 8000376:	af00      	add	r7, sp, #0
	printf("BTN Pressed...\n\r");
 8000378:	4805      	ldr	r0, [pc, #20]	; (8000390 <exti_callback+0x1c>)
 800037a:	f000 fa6b 	bl	8000854 <iprintf>
	GPIOA->ODR ^= LED;
 800037e:	4b05      	ldr	r3, [pc, #20]	; (8000394 <exti_callback+0x20>)
 8000380:	695b      	ldr	r3, [r3, #20]
 8000382:	4a04      	ldr	r2, [pc, #16]	; (8000394 <exti_callback+0x20>)
 8000384:	f083 0320 	eor.w	r3, r3, #32
 8000388:	6153      	str	r3, [r2, #20]
}
 800038a:	bf00      	nop
 800038c:	bd80      	pop	{r7, pc}
 800038e:	bf00      	nop
 8000390:	08001558 	.word	0x08001558
 8000394:	40020000 	.word	0x40020000

08000398 <EXTI15_10_IRQHandler>:


// EXTI15_10_IRQHandler - this name, because this name wrote in table vector
void EXTI15_10_IRQHandler(void){
 8000398:	b580      	push	{r7, lr}
 800039a:	af00      	add	r7, sp, #0
	if((EXTI->PR & LINE13) != 0) {
 800039c:	4b07      	ldr	r3, [pc, #28]	; (80003bc <EXTI15_10_IRQHandler+0x24>)
 800039e:	695b      	ldr	r3, [r3, #20]
 80003a0:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 80003a4:	2b00      	cmp	r3, #0
 80003a6:	d007      	beq.n	80003b8 <EXTI15_10_IRQHandler+0x20>

		// Clear PR flag
		EXTI->PR |= LINE13;
 80003a8:	4b04      	ldr	r3, [pc, #16]	; (80003bc <EXTI15_10_IRQHandler+0x24>)
 80003aa:	695b      	ldr	r3, [r3, #20]
 80003ac:	4a03      	ldr	r2, [pc, #12]	; (80003bc <EXTI15_10_IRQHandler+0x24>)
 80003ae:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80003b2:	6153      	str	r3, [r2, #20]
		// Do something...
		exti_callback();
 80003b4:	f7ff ffde 	bl	8000374 <exti_callback>
	}
}
 80003b8:	bf00      	nop
 80003ba:	bd80      	pop	{r7, pc}
 80003bc:	40013c00 	.word	0x40013c00

080003c0 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003c0:	b580      	push	{r7, lr}
 80003c2:	b086      	sub	sp, #24
 80003c4:	af00      	add	r7, sp, #0
 80003c6:	60f8      	str	r0, [r7, #12]
 80003c8:	60b9      	str	r1, [r7, #8]
 80003ca:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003cc:	2300      	movs	r3, #0
 80003ce:	617b      	str	r3, [r7, #20]
 80003d0:	e00a      	b.n	80003e8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80003d2:	f3af 8000 	nop.w
 80003d6:	4601      	mov	r1, r0
 80003d8:	68bb      	ldr	r3, [r7, #8]
 80003da:	1c5a      	adds	r2, r3, #1
 80003dc:	60ba      	str	r2, [r7, #8]
 80003de:	b2ca      	uxtb	r2, r1
 80003e0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003e2:	697b      	ldr	r3, [r7, #20]
 80003e4:	3301      	adds	r3, #1
 80003e6:	617b      	str	r3, [r7, #20]
 80003e8:	697a      	ldr	r2, [r7, #20]
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	429a      	cmp	r2, r3
 80003ee:	dbf0      	blt.n	80003d2 <_read+0x12>
  }

  return len;
 80003f0:	687b      	ldr	r3, [r7, #4]
}
 80003f2:	4618      	mov	r0, r3
 80003f4:	3718      	adds	r7, #24
 80003f6:	46bd      	mov	sp, r7
 80003f8:	bd80      	pop	{r7, pc}

080003fa <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80003fa:	b580      	push	{r7, lr}
 80003fc:	b086      	sub	sp, #24
 80003fe:	af00      	add	r7, sp, #0
 8000400:	60f8      	str	r0, [r7, #12]
 8000402:	60b9      	str	r1, [r7, #8]
 8000404:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000406:	2300      	movs	r3, #0
 8000408:	617b      	str	r3, [r7, #20]
 800040a:	e009      	b.n	8000420 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800040c:	68bb      	ldr	r3, [r7, #8]
 800040e:	1c5a      	adds	r2, r3, #1
 8000410:	60ba      	str	r2, [r7, #8]
 8000412:	781b      	ldrb	r3, [r3, #0]
 8000414:	4618      	mov	r0, r3
 8000416:	f000 f877 	bl	8000508 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800041a:	697b      	ldr	r3, [r7, #20]
 800041c:	3301      	adds	r3, #1
 800041e:	617b      	str	r3, [r7, #20]
 8000420:	697a      	ldr	r2, [r7, #20]
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	429a      	cmp	r2, r3
 8000426:	dbf1      	blt.n	800040c <_write+0x12>
  }
  return len;
 8000428:	687b      	ldr	r3, [r7, #4]
}
 800042a:	4618      	mov	r0, r3
 800042c:	3718      	adds	r7, #24
 800042e:	46bd      	mov	sp, r7
 8000430:	bd80      	pop	{r7, pc}

08000432 <_close>:

int _close(int file)
{
 8000432:	b480      	push	{r7}
 8000434:	b083      	sub	sp, #12
 8000436:	af00      	add	r7, sp, #0
 8000438:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800043a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800043e:	4618      	mov	r0, r3
 8000440:	370c      	adds	r7, #12
 8000442:	46bd      	mov	sp, r7
 8000444:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000448:	4770      	bx	lr

0800044a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800044a:	b480      	push	{r7}
 800044c:	b083      	sub	sp, #12
 800044e:	af00      	add	r7, sp, #0
 8000450:	6078      	str	r0, [r7, #4]
 8000452:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000454:	683b      	ldr	r3, [r7, #0]
 8000456:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800045a:	605a      	str	r2, [r3, #4]
  return 0;
 800045c:	2300      	movs	r3, #0
}
 800045e:	4618      	mov	r0, r3
 8000460:	370c      	adds	r7, #12
 8000462:	46bd      	mov	sp, r7
 8000464:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000468:	4770      	bx	lr

0800046a <_isatty>:

int _isatty(int file)
{
 800046a:	b480      	push	{r7}
 800046c:	b083      	sub	sp, #12
 800046e:	af00      	add	r7, sp, #0
 8000470:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000472:	2301      	movs	r3, #1
}
 8000474:	4618      	mov	r0, r3
 8000476:	370c      	adds	r7, #12
 8000478:	46bd      	mov	sp, r7
 800047a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800047e:	4770      	bx	lr

08000480 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000480:	b480      	push	{r7}
 8000482:	b085      	sub	sp, #20
 8000484:	af00      	add	r7, sp, #0
 8000486:	60f8      	str	r0, [r7, #12]
 8000488:	60b9      	str	r1, [r7, #8]
 800048a:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800048c:	2300      	movs	r3, #0
}
 800048e:	4618      	mov	r0, r3
 8000490:	3714      	adds	r7, #20
 8000492:	46bd      	mov	sp, r7
 8000494:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000498:	4770      	bx	lr
	...

0800049c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800049c:	b580      	push	{r7, lr}
 800049e:	b086      	sub	sp, #24
 80004a0:	af00      	add	r7, sp, #0
 80004a2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004a4:	4a14      	ldr	r2, [pc, #80]	; (80004f8 <_sbrk+0x5c>)
 80004a6:	4b15      	ldr	r3, [pc, #84]	; (80004fc <_sbrk+0x60>)
 80004a8:	1ad3      	subs	r3, r2, r3
 80004aa:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004ac:	697b      	ldr	r3, [r7, #20]
 80004ae:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004b0:	4b13      	ldr	r3, [pc, #76]	; (8000500 <_sbrk+0x64>)
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	2b00      	cmp	r3, #0
 80004b6:	d102      	bne.n	80004be <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004b8:	4b11      	ldr	r3, [pc, #68]	; (8000500 <_sbrk+0x64>)
 80004ba:	4a12      	ldr	r2, [pc, #72]	; (8000504 <_sbrk+0x68>)
 80004bc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004be:	4b10      	ldr	r3, [pc, #64]	; (8000500 <_sbrk+0x64>)
 80004c0:	681a      	ldr	r2, [r3, #0]
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	4413      	add	r3, r2
 80004c6:	693a      	ldr	r2, [r7, #16]
 80004c8:	429a      	cmp	r2, r3
 80004ca:	d207      	bcs.n	80004dc <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004cc:	f000 fa66 	bl	800099c <__errno>
 80004d0:	4603      	mov	r3, r0
 80004d2:	220c      	movs	r2, #12
 80004d4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004d6:	f04f 33ff 	mov.w	r3, #4294967295
 80004da:	e009      	b.n	80004f0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004dc:	4b08      	ldr	r3, [pc, #32]	; (8000500 <_sbrk+0x64>)
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004e2:	4b07      	ldr	r3, [pc, #28]	; (8000500 <_sbrk+0x64>)
 80004e4:	681a      	ldr	r2, [r3, #0]
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	4413      	add	r3, r2
 80004ea:	4a05      	ldr	r2, [pc, #20]	; (8000500 <_sbrk+0x64>)
 80004ec:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004ee:	68fb      	ldr	r3, [r7, #12]
}
 80004f0:	4618      	mov	r0, r3
 80004f2:	3718      	adds	r7, #24
 80004f4:	46bd      	mov	sp, r7
 80004f6:	bd80      	pop	{r7, pc}
 80004f8:	20020000 	.word	0x20020000
 80004fc:	00000400 	.word	0x00000400
 8000500:	20000078 	.word	0x20000078
 8000504:	200001c8 	.word	0x200001c8

08000508 <__io_putchar>:


void uart2_write(int ch);

//Function for printF
int __io_putchar(int ch){
 8000508:	b580      	push	{r7, lr}
 800050a:	b082      	sub	sp, #8
 800050c:	af00      	add	r7, sp, #0
 800050e:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 8000510:	6878      	ldr	r0, [r7, #4]
 8000512:	f000 f875 	bl	8000600 <uart2_write>
	return ch;
 8000516:	687b      	ldr	r3, [r7, #4]
}
 8000518:	4618      	mov	r0, r3
 800051a:	3708      	adds	r7, #8
 800051c:	46bd      	mov	sp, r7
 800051e:	bd80      	pop	{r7, pc}

08000520 <uart2_rxtx_init>:

void uart2_rxtx_init(void) {
 8000520:	b580      	push	{r7, lr}
 8000522:	af00      	add	r7, sp, #0
							// Configure uart gpio pin
	//Enable clock access to gpioa
	RCC->AHB1ENR|= GPIOAEN;
 8000524:	4b32      	ldr	r3, [pc, #200]	; (80005f0 <uart2_rxtx_init+0xd0>)
 8000526:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000528:	4a31      	ldr	r2, [pc, #196]	; (80005f0 <uart2_rxtx_init+0xd0>)
 800052a:	f043 0301 	orr.w	r3, r3, #1
 800052e:	6313      	str	r3, [r2, #48]	; 0x30

	//Set PA2 mode to alternate function mode
	GPIOA->MODER &=~(1U<<4);
 8000530:	4b30      	ldr	r3, [pc, #192]	; (80005f4 <uart2_rxtx_init+0xd4>)
 8000532:	681b      	ldr	r3, [r3, #0]
 8000534:	4a2f      	ldr	r2, [pc, #188]	; (80005f4 <uart2_rxtx_init+0xd4>)
 8000536:	f023 0310 	bic.w	r3, r3, #16
 800053a:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U<<5);
 800053c:	4b2d      	ldr	r3, [pc, #180]	; (80005f4 <uart2_rxtx_init+0xd4>)
 800053e:	681b      	ldr	r3, [r3, #0]
 8000540:	4a2c      	ldr	r2, [pc, #176]	; (80005f4 <uart2_rxtx_init+0xd4>)
 8000542:	f043 0320 	orr.w	r3, r3, #32
 8000546:	6013      	str	r3, [r2, #0]

	//Set PA2 alternate function type to UART_TX (AF07)
	GPIOA->AFR[0] |= (1U<<8);
 8000548:	4b2a      	ldr	r3, [pc, #168]	; (80005f4 <uart2_rxtx_init+0xd4>)
 800054a:	6a1b      	ldr	r3, [r3, #32]
 800054c:	4a29      	ldr	r2, [pc, #164]	; (80005f4 <uart2_rxtx_init+0xd4>)
 800054e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000552:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<9);
 8000554:	4b27      	ldr	r3, [pc, #156]	; (80005f4 <uart2_rxtx_init+0xd4>)
 8000556:	6a1b      	ldr	r3, [r3, #32]
 8000558:	4a26      	ldr	r2, [pc, #152]	; (80005f4 <uart2_rxtx_init+0xd4>)
 800055a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800055e:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<10);
 8000560:	4b24      	ldr	r3, [pc, #144]	; (80005f4 <uart2_rxtx_init+0xd4>)
 8000562:	6a1b      	ldr	r3, [r3, #32]
 8000564:	4a23      	ldr	r2, [pc, #140]	; (80005f4 <uart2_rxtx_init+0xd4>)
 8000566:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800056a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U<<11);
 800056c:	4b21      	ldr	r3, [pc, #132]	; (80005f4 <uart2_rxtx_init+0xd4>)
 800056e:	6a1b      	ldr	r3, [r3, #32]
 8000570:	4a20      	ldr	r2, [pc, #128]	; (80005f4 <uart2_rxtx_init+0xd4>)
 8000572:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8000576:	6213      	str	r3, [r2, #32]


	//Set PA3 mode to alternate function mode
	GPIOA->MODER &=~(1U<<6);
 8000578:	4b1e      	ldr	r3, [pc, #120]	; (80005f4 <uart2_rxtx_init+0xd4>)
 800057a:	681b      	ldr	r3, [r3, #0]
 800057c:	4a1d      	ldr	r2, [pc, #116]	; (80005f4 <uart2_rxtx_init+0xd4>)
 800057e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000582:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U<<7);
 8000584:	4b1b      	ldr	r3, [pc, #108]	; (80005f4 <uart2_rxtx_init+0xd4>)
 8000586:	681b      	ldr	r3, [r3, #0]
 8000588:	4a1a      	ldr	r2, [pc, #104]	; (80005f4 <uart2_rxtx_init+0xd4>)
 800058a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800058e:	6013      	str	r3, [r2, #0]

	//Set PA3 alternate function type to UART_RX (AF07)
	GPIOA->AFR[0] |= (1U<<12);
 8000590:	4b18      	ldr	r3, [pc, #96]	; (80005f4 <uart2_rxtx_init+0xd4>)
 8000592:	6a1b      	ldr	r3, [r3, #32]
 8000594:	4a17      	ldr	r2, [pc, #92]	; (80005f4 <uart2_rxtx_init+0xd4>)
 8000596:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800059a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<13);
 800059c:	4b15      	ldr	r3, [pc, #84]	; (80005f4 <uart2_rxtx_init+0xd4>)
 800059e:	6a1b      	ldr	r3, [r3, #32]
 80005a0:	4a14      	ldr	r2, [pc, #80]	; (80005f4 <uart2_rxtx_init+0xd4>)
 80005a2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80005a6:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<14);
 80005a8:	4b12      	ldr	r3, [pc, #72]	; (80005f4 <uart2_rxtx_init+0xd4>)
 80005aa:	6a1b      	ldr	r3, [r3, #32]
 80005ac:	4a11      	ldr	r2, [pc, #68]	; (80005f4 <uart2_rxtx_init+0xd4>)
 80005ae:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80005b2:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U<<15);
 80005b4:	4b0f      	ldr	r3, [pc, #60]	; (80005f4 <uart2_rxtx_init+0xd4>)
 80005b6:	6a1b      	ldr	r3, [r3, #32]
 80005b8:	4a0e      	ldr	r2, [pc, #56]	; (80005f4 <uart2_rxtx_init+0xd4>)
 80005ba:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80005be:	6213      	str	r3, [r2, #32]



							// Configure uart module
	//Enable clock access to uart1
	RCC->APB1ENR |= UART2EN; // -> ???
 80005c0:	4b0b      	ldr	r3, [pc, #44]	; (80005f0 <uart2_rxtx_init+0xd0>)
 80005c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80005c4:	4a0a      	ldr	r2, [pc, #40]	; (80005f0 <uart2_rxtx_init+0xd0>)
 80005c6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80005ca:	6413      	str	r3, [r2, #64]	; 0x40

	//Configure baudrate
	uart_set_baudrate(USART2,ABP1_CLK, UART_BAUDRATE);
 80005cc:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80005d0:	4909      	ldr	r1, [pc, #36]	; (80005f8 <uart2_rxtx_init+0xd8>)
 80005d2:	480a      	ldr	r0, [pc, #40]	; (80005fc <uart2_rxtx_init+0xdc>)
 80005d4:	f000 f82c 	bl	8000630 <uart_set_baudrate>


	//Configure the tranfer direction
	USART2->CR1 = (CR1_TE | CR1_RE);
 80005d8:	4b08      	ldr	r3, [pc, #32]	; (80005fc <uart2_rxtx_init+0xdc>)
 80005da:	220c      	movs	r2, #12
 80005dc:	60da      	str	r2, [r3, #12]

	// Enable uart module
	USART2->CR1 |= CR1_UE;
 80005de:	4b07      	ldr	r3, [pc, #28]	; (80005fc <uart2_rxtx_init+0xdc>)
 80005e0:	68db      	ldr	r3, [r3, #12]
 80005e2:	4a06      	ldr	r2, [pc, #24]	; (80005fc <uart2_rxtx_init+0xdc>)
 80005e4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80005e8:	60d3      	str	r3, [r2, #12]
}
 80005ea:	bf00      	nop
 80005ec:	bd80      	pop	{r7, pc}
 80005ee:	bf00      	nop
 80005f0:	40023800 	.word	0x40023800
 80005f4:	40020000 	.word	0x40020000
 80005f8:	00f42400 	.word	0x00f42400
 80005fc:	40004400 	.word	0x40004400

08000600 <uart2_write>:
	return USART2->DR;

}


void uart2_write(int ch) {
 8000600:	b480      	push	{r7}
 8000602:	b083      	sub	sp, #12
 8000604:	af00      	add	r7, sp, #0
 8000606:	6078      	str	r0, [r7, #4]
	// Make sure the transmit data register is empty
	while(!(USART2->SR & SR_TXE)){}
 8000608:	bf00      	nop
 800060a:	4b08      	ldr	r3, [pc, #32]	; (800062c <uart2_write+0x2c>)
 800060c:	681b      	ldr	r3, [r3, #0]
 800060e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000612:	2b00      	cmp	r3, #0
 8000614:	d0f9      	beq.n	800060a <uart2_write+0xa>

	// Write to transmit data register

	USART2->DR = (ch & 0xFF);
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	4a04      	ldr	r2, [pc, #16]	; (800062c <uart2_write+0x2c>)
 800061a:	b2db      	uxtb	r3, r3
 800061c:	6053      	str	r3, [r2, #4]
}
 800061e:	bf00      	nop
 8000620:	370c      	adds	r7, #12
 8000622:	46bd      	mov	sp, r7
 8000624:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000628:	4770      	bx	lr
 800062a:	bf00      	nop
 800062c:	40004400 	.word	0x40004400

08000630 <uart_set_baudrate>:

static void uart_set_baudrate(USART_TypeDef *UASRTx,uint32_t PeriphClk,uint32_t BaudRate){
 8000630:	b580      	push	{r7, lr}
 8000632:	b084      	sub	sp, #16
 8000634:	af00      	add	r7, sp, #0
 8000636:	60f8      	str	r0, [r7, #12]
 8000638:	60b9      	str	r1, [r7, #8]
 800063a:	607a      	str	r2, [r7, #4]
	UASRTx->BRR = compute_uart_bd(PeriphClk,BaudRate);
 800063c:	6879      	ldr	r1, [r7, #4]
 800063e:	68b8      	ldr	r0, [r7, #8]
 8000640:	f000 f808 	bl	8000654 <compute_uart_bd>
 8000644:	4603      	mov	r3, r0
 8000646:	461a      	mov	r2, r3
 8000648:	68fb      	ldr	r3, [r7, #12]
 800064a:	609a      	str	r2, [r3, #8]
}
 800064c:	bf00      	nop
 800064e:	3710      	adds	r7, #16
 8000650:	46bd      	mov	sp, r7
 8000652:	bd80      	pop	{r7, pc}

08000654 <compute_uart_bd>:

static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate){
 8000654:	b480      	push	{r7}
 8000656:	b083      	sub	sp, #12
 8000658:	af00      	add	r7, sp, #0
 800065a:	6078      	str	r0, [r7, #4]
 800065c:	6039      	str	r1, [r7, #0]
	return ((PeriphClk + (BaudRate/2U)) / BaudRate);
 800065e:	683b      	ldr	r3, [r7, #0]
 8000660:	085a      	lsrs	r2, r3, #1
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	441a      	add	r2, r3
 8000666:	683b      	ldr	r3, [r7, #0]
 8000668:	fbb2 f3f3 	udiv	r3, r2, r3
 800066c:	b29b      	uxth	r3, r3
}
 800066e:	4618      	mov	r0, r3
 8000670:	370c      	adds	r7, #12
 8000672:	46bd      	mov	sp, r7
 8000674:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000678:	4770      	bx	lr
	...

0800067c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800067c:	480d      	ldr	r0, [pc, #52]	; (80006b4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800067e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000680:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000684:	480c      	ldr	r0, [pc, #48]	; (80006b8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000686:	490d      	ldr	r1, [pc, #52]	; (80006bc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000688:	4a0d      	ldr	r2, [pc, #52]	; (80006c0 <LoopForever+0xe>)
  movs r3, #0
 800068a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800068c:	e002      	b.n	8000694 <LoopCopyDataInit>

0800068e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800068e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000690:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000692:	3304      	adds	r3, #4

08000694 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000694:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000696:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000698:	d3f9      	bcc.n	800068e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800069a:	4a0a      	ldr	r2, [pc, #40]	; (80006c4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800069c:	4c0a      	ldr	r4, [pc, #40]	; (80006c8 <LoopForever+0x16>)
  movs r3, #0
 800069e:	2300      	movs	r3, #0
  b LoopFillZerobss
 80006a0:	e001      	b.n	80006a6 <LoopFillZerobss>

080006a2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80006a2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80006a4:	3204      	adds	r2, #4

080006a6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80006a6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80006a8:	d3fb      	bcc.n	80006a2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80006aa:	f000 f97d 	bl	80009a8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80006ae:	f7ff fe43 	bl	8000338 <main>

080006b2 <LoopForever>:

LoopForever:
  b LoopForever
 80006b2:	e7fe      	b.n	80006b2 <LoopForever>
  ldr   r0, =_estack
 80006b4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80006b8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80006bc:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80006c0:	080015a4 	.word	0x080015a4
  ldr r2, =_sbss
 80006c4:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80006c8:	200001c8 	.word	0x200001c8

080006cc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006cc:	e7fe      	b.n	80006cc <ADC_IRQHandler>
	...

080006d0 <std>:
 80006d0:	2300      	movs	r3, #0
 80006d2:	b510      	push	{r4, lr}
 80006d4:	4604      	mov	r4, r0
 80006d6:	e9c0 3300 	strd	r3, r3, [r0]
 80006da:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80006de:	6083      	str	r3, [r0, #8]
 80006e0:	8181      	strh	r1, [r0, #12]
 80006e2:	6643      	str	r3, [r0, #100]	; 0x64
 80006e4:	81c2      	strh	r2, [r0, #14]
 80006e6:	6183      	str	r3, [r0, #24]
 80006e8:	4619      	mov	r1, r3
 80006ea:	2208      	movs	r2, #8
 80006ec:	305c      	adds	r0, #92	; 0x5c
 80006ee:	f000 f906 	bl	80008fe <memset>
 80006f2:	4b0d      	ldr	r3, [pc, #52]	; (8000728 <std+0x58>)
 80006f4:	6263      	str	r3, [r4, #36]	; 0x24
 80006f6:	4b0d      	ldr	r3, [pc, #52]	; (800072c <std+0x5c>)
 80006f8:	62a3      	str	r3, [r4, #40]	; 0x28
 80006fa:	4b0d      	ldr	r3, [pc, #52]	; (8000730 <std+0x60>)
 80006fc:	62e3      	str	r3, [r4, #44]	; 0x2c
 80006fe:	4b0d      	ldr	r3, [pc, #52]	; (8000734 <std+0x64>)
 8000700:	6323      	str	r3, [r4, #48]	; 0x30
 8000702:	4b0d      	ldr	r3, [pc, #52]	; (8000738 <std+0x68>)
 8000704:	6224      	str	r4, [r4, #32]
 8000706:	429c      	cmp	r4, r3
 8000708:	d006      	beq.n	8000718 <std+0x48>
 800070a:	f103 0268 	add.w	r2, r3, #104	; 0x68
 800070e:	4294      	cmp	r4, r2
 8000710:	d002      	beq.n	8000718 <std+0x48>
 8000712:	33d0      	adds	r3, #208	; 0xd0
 8000714:	429c      	cmp	r4, r3
 8000716:	d105      	bne.n	8000724 <std+0x54>
 8000718:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800071c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000720:	f000 b966 	b.w	80009f0 <__retarget_lock_init_recursive>
 8000724:	bd10      	pop	{r4, pc}
 8000726:	bf00      	nop
 8000728:	08000879 	.word	0x08000879
 800072c:	0800089b 	.word	0x0800089b
 8000730:	080008d3 	.word	0x080008d3
 8000734:	080008f7 	.word	0x080008f7
 8000738:	2000007c 	.word	0x2000007c

0800073c <stdio_exit_handler>:
 800073c:	4a02      	ldr	r2, [pc, #8]	; (8000748 <stdio_exit_handler+0xc>)
 800073e:	4903      	ldr	r1, [pc, #12]	; (800074c <stdio_exit_handler+0x10>)
 8000740:	4803      	ldr	r0, [pc, #12]	; (8000750 <stdio_exit_handler+0x14>)
 8000742:	f000 b869 	b.w	8000818 <_fwalk_sglue>
 8000746:	bf00      	nop
 8000748:	20000000 	.word	0x20000000
 800074c:	0800129d 	.word	0x0800129d
 8000750:	2000000c 	.word	0x2000000c

08000754 <cleanup_stdio>:
 8000754:	6841      	ldr	r1, [r0, #4]
 8000756:	4b0c      	ldr	r3, [pc, #48]	; (8000788 <cleanup_stdio+0x34>)
 8000758:	4299      	cmp	r1, r3
 800075a:	b510      	push	{r4, lr}
 800075c:	4604      	mov	r4, r0
 800075e:	d001      	beq.n	8000764 <cleanup_stdio+0x10>
 8000760:	f000 fd9c 	bl	800129c <_fflush_r>
 8000764:	68a1      	ldr	r1, [r4, #8]
 8000766:	4b09      	ldr	r3, [pc, #36]	; (800078c <cleanup_stdio+0x38>)
 8000768:	4299      	cmp	r1, r3
 800076a:	d002      	beq.n	8000772 <cleanup_stdio+0x1e>
 800076c:	4620      	mov	r0, r4
 800076e:	f000 fd95 	bl	800129c <_fflush_r>
 8000772:	68e1      	ldr	r1, [r4, #12]
 8000774:	4b06      	ldr	r3, [pc, #24]	; (8000790 <cleanup_stdio+0x3c>)
 8000776:	4299      	cmp	r1, r3
 8000778:	d004      	beq.n	8000784 <cleanup_stdio+0x30>
 800077a:	4620      	mov	r0, r4
 800077c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000780:	f000 bd8c 	b.w	800129c <_fflush_r>
 8000784:	bd10      	pop	{r4, pc}
 8000786:	bf00      	nop
 8000788:	2000007c 	.word	0x2000007c
 800078c:	200000e4 	.word	0x200000e4
 8000790:	2000014c 	.word	0x2000014c

08000794 <global_stdio_init.part.0>:
 8000794:	b510      	push	{r4, lr}
 8000796:	4b0b      	ldr	r3, [pc, #44]	; (80007c4 <global_stdio_init.part.0+0x30>)
 8000798:	4c0b      	ldr	r4, [pc, #44]	; (80007c8 <global_stdio_init.part.0+0x34>)
 800079a:	4a0c      	ldr	r2, [pc, #48]	; (80007cc <global_stdio_init.part.0+0x38>)
 800079c:	601a      	str	r2, [r3, #0]
 800079e:	4620      	mov	r0, r4
 80007a0:	2200      	movs	r2, #0
 80007a2:	2104      	movs	r1, #4
 80007a4:	f7ff ff94 	bl	80006d0 <std>
 80007a8:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80007ac:	2201      	movs	r2, #1
 80007ae:	2109      	movs	r1, #9
 80007b0:	f7ff ff8e 	bl	80006d0 <std>
 80007b4:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80007b8:	2202      	movs	r2, #2
 80007ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007be:	2112      	movs	r1, #18
 80007c0:	f7ff bf86 	b.w	80006d0 <std>
 80007c4:	200001b4 	.word	0x200001b4
 80007c8:	2000007c 	.word	0x2000007c
 80007cc:	0800073d 	.word	0x0800073d

080007d0 <__sfp_lock_acquire>:
 80007d0:	4801      	ldr	r0, [pc, #4]	; (80007d8 <__sfp_lock_acquire+0x8>)
 80007d2:	f000 b90e 	b.w	80009f2 <__retarget_lock_acquire_recursive>
 80007d6:	bf00      	nop
 80007d8:	200001bd 	.word	0x200001bd

080007dc <__sfp_lock_release>:
 80007dc:	4801      	ldr	r0, [pc, #4]	; (80007e4 <__sfp_lock_release+0x8>)
 80007de:	f000 b909 	b.w	80009f4 <__retarget_lock_release_recursive>
 80007e2:	bf00      	nop
 80007e4:	200001bd 	.word	0x200001bd

080007e8 <__sinit>:
 80007e8:	b510      	push	{r4, lr}
 80007ea:	4604      	mov	r4, r0
 80007ec:	f7ff fff0 	bl	80007d0 <__sfp_lock_acquire>
 80007f0:	6a23      	ldr	r3, [r4, #32]
 80007f2:	b11b      	cbz	r3, 80007fc <__sinit+0x14>
 80007f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007f8:	f7ff bff0 	b.w	80007dc <__sfp_lock_release>
 80007fc:	4b04      	ldr	r3, [pc, #16]	; (8000810 <__sinit+0x28>)
 80007fe:	6223      	str	r3, [r4, #32]
 8000800:	4b04      	ldr	r3, [pc, #16]	; (8000814 <__sinit+0x2c>)
 8000802:	681b      	ldr	r3, [r3, #0]
 8000804:	2b00      	cmp	r3, #0
 8000806:	d1f5      	bne.n	80007f4 <__sinit+0xc>
 8000808:	f7ff ffc4 	bl	8000794 <global_stdio_init.part.0>
 800080c:	e7f2      	b.n	80007f4 <__sinit+0xc>
 800080e:	bf00      	nop
 8000810:	08000755 	.word	0x08000755
 8000814:	200001b4 	.word	0x200001b4

08000818 <_fwalk_sglue>:
 8000818:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800081c:	4607      	mov	r7, r0
 800081e:	4688      	mov	r8, r1
 8000820:	4614      	mov	r4, r2
 8000822:	2600      	movs	r6, #0
 8000824:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000828:	f1b9 0901 	subs.w	r9, r9, #1
 800082c:	d505      	bpl.n	800083a <_fwalk_sglue+0x22>
 800082e:	6824      	ldr	r4, [r4, #0]
 8000830:	2c00      	cmp	r4, #0
 8000832:	d1f7      	bne.n	8000824 <_fwalk_sglue+0xc>
 8000834:	4630      	mov	r0, r6
 8000836:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800083a:	89ab      	ldrh	r3, [r5, #12]
 800083c:	2b01      	cmp	r3, #1
 800083e:	d907      	bls.n	8000850 <_fwalk_sglue+0x38>
 8000840:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000844:	3301      	adds	r3, #1
 8000846:	d003      	beq.n	8000850 <_fwalk_sglue+0x38>
 8000848:	4629      	mov	r1, r5
 800084a:	4638      	mov	r0, r7
 800084c:	47c0      	blx	r8
 800084e:	4306      	orrs	r6, r0
 8000850:	3568      	adds	r5, #104	; 0x68
 8000852:	e7e9      	b.n	8000828 <_fwalk_sglue+0x10>

08000854 <iprintf>:
 8000854:	b40f      	push	{r0, r1, r2, r3}
 8000856:	b507      	push	{r0, r1, r2, lr}
 8000858:	4906      	ldr	r1, [pc, #24]	; (8000874 <iprintf+0x20>)
 800085a:	ab04      	add	r3, sp, #16
 800085c:	6808      	ldr	r0, [r1, #0]
 800085e:	f853 2b04 	ldr.w	r2, [r3], #4
 8000862:	6881      	ldr	r1, [r0, #8]
 8000864:	9301      	str	r3, [sp, #4]
 8000866:	f000 f9e9 	bl	8000c3c <_vfiprintf_r>
 800086a:	b003      	add	sp, #12
 800086c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000870:	b004      	add	sp, #16
 8000872:	4770      	bx	lr
 8000874:	20000058 	.word	0x20000058

08000878 <__sread>:
 8000878:	b510      	push	{r4, lr}
 800087a:	460c      	mov	r4, r1
 800087c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000880:	f000 f868 	bl	8000954 <_read_r>
 8000884:	2800      	cmp	r0, #0
 8000886:	bfab      	itete	ge
 8000888:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800088a:	89a3      	ldrhlt	r3, [r4, #12]
 800088c:	181b      	addge	r3, r3, r0
 800088e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000892:	bfac      	ite	ge
 8000894:	6563      	strge	r3, [r4, #84]	; 0x54
 8000896:	81a3      	strhlt	r3, [r4, #12]
 8000898:	bd10      	pop	{r4, pc}

0800089a <__swrite>:
 800089a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800089e:	461f      	mov	r7, r3
 80008a0:	898b      	ldrh	r3, [r1, #12]
 80008a2:	05db      	lsls	r3, r3, #23
 80008a4:	4605      	mov	r5, r0
 80008a6:	460c      	mov	r4, r1
 80008a8:	4616      	mov	r6, r2
 80008aa:	d505      	bpl.n	80008b8 <__swrite+0x1e>
 80008ac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80008b0:	2302      	movs	r3, #2
 80008b2:	2200      	movs	r2, #0
 80008b4:	f000 f83c 	bl	8000930 <_lseek_r>
 80008b8:	89a3      	ldrh	r3, [r4, #12]
 80008ba:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80008be:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80008c2:	81a3      	strh	r3, [r4, #12]
 80008c4:	4632      	mov	r2, r6
 80008c6:	463b      	mov	r3, r7
 80008c8:	4628      	mov	r0, r5
 80008ca:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80008ce:	f000 b853 	b.w	8000978 <_write_r>

080008d2 <__sseek>:
 80008d2:	b510      	push	{r4, lr}
 80008d4:	460c      	mov	r4, r1
 80008d6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80008da:	f000 f829 	bl	8000930 <_lseek_r>
 80008de:	1c43      	adds	r3, r0, #1
 80008e0:	89a3      	ldrh	r3, [r4, #12]
 80008e2:	bf15      	itete	ne
 80008e4:	6560      	strne	r0, [r4, #84]	; 0x54
 80008e6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80008ea:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80008ee:	81a3      	strheq	r3, [r4, #12]
 80008f0:	bf18      	it	ne
 80008f2:	81a3      	strhne	r3, [r4, #12]
 80008f4:	bd10      	pop	{r4, pc}

080008f6 <__sclose>:
 80008f6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80008fa:	f000 b809 	b.w	8000910 <_close_r>

080008fe <memset>:
 80008fe:	4402      	add	r2, r0
 8000900:	4603      	mov	r3, r0
 8000902:	4293      	cmp	r3, r2
 8000904:	d100      	bne.n	8000908 <memset+0xa>
 8000906:	4770      	bx	lr
 8000908:	f803 1b01 	strb.w	r1, [r3], #1
 800090c:	e7f9      	b.n	8000902 <memset+0x4>
	...

08000910 <_close_r>:
 8000910:	b538      	push	{r3, r4, r5, lr}
 8000912:	4d06      	ldr	r5, [pc, #24]	; (800092c <_close_r+0x1c>)
 8000914:	2300      	movs	r3, #0
 8000916:	4604      	mov	r4, r0
 8000918:	4608      	mov	r0, r1
 800091a:	602b      	str	r3, [r5, #0]
 800091c:	f7ff fd89 	bl	8000432 <_close>
 8000920:	1c43      	adds	r3, r0, #1
 8000922:	d102      	bne.n	800092a <_close_r+0x1a>
 8000924:	682b      	ldr	r3, [r5, #0]
 8000926:	b103      	cbz	r3, 800092a <_close_r+0x1a>
 8000928:	6023      	str	r3, [r4, #0]
 800092a:	bd38      	pop	{r3, r4, r5, pc}
 800092c:	200001b8 	.word	0x200001b8

08000930 <_lseek_r>:
 8000930:	b538      	push	{r3, r4, r5, lr}
 8000932:	4d07      	ldr	r5, [pc, #28]	; (8000950 <_lseek_r+0x20>)
 8000934:	4604      	mov	r4, r0
 8000936:	4608      	mov	r0, r1
 8000938:	4611      	mov	r1, r2
 800093a:	2200      	movs	r2, #0
 800093c:	602a      	str	r2, [r5, #0]
 800093e:	461a      	mov	r2, r3
 8000940:	f7ff fd9e 	bl	8000480 <_lseek>
 8000944:	1c43      	adds	r3, r0, #1
 8000946:	d102      	bne.n	800094e <_lseek_r+0x1e>
 8000948:	682b      	ldr	r3, [r5, #0]
 800094a:	b103      	cbz	r3, 800094e <_lseek_r+0x1e>
 800094c:	6023      	str	r3, [r4, #0]
 800094e:	bd38      	pop	{r3, r4, r5, pc}
 8000950:	200001b8 	.word	0x200001b8

08000954 <_read_r>:
 8000954:	b538      	push	{r3, r4, r5, lr}
 8000956:	4d07      	ldr	r5, [pc, #28]	; (8000974 <_read_r+0x20>)
 8000958:	4604      	mov	r4, r0
 800095a:	4608      	mov	r0, r1
 800095c:	4611      	mov	r1, r2
 800095e:	2200      	movs	r2, #0
 8000960:	602a      	str	r2, [r5, #0]
 8000962:	461a      	mov	r2, r3
 8000964:	f7ff fd2c 	bl	80003c0 <_read>
 8000968:	1c43      	adds	r3, r0, #1
 800096a:	d102      	bne.n	8000972 <_read_r+0x1e>
 800096c:	682b      	ldr	r3, [r5, #0]
 800096e:	b103      	cbz	r3, 8000972 <_read_r+0x1e>
 8000970:	6023      	str	r3, [r4, #0]
 8000972:	bd38      	pop	{r3, r4, r5, pc}
 8000974:	200001b8 	.word	0x200001b8

08000978 <_write_r>:
 8000978:	b538      	push	{r3, r4, r5, lr}
 800097a:	4d07      	ldr	r5, [pc, #28]	; (8000998 <_write_r+0x20>)
 800097c:	4604      	mov	r4, r0
 800097e:	4608      	mov	r0, r1
 8000980:	4611      	mov	r1, r2
 8000982:	2200      	movs	r2, #0
 8000984:	602a      	str	r2, [r5, #0]
 8000986:	461a      	mov	r2, r3
 8000988:	f7ff fd37 	bl	80003fa <_write>
 800098c:	1c43      	adds	r3, r0, #1
 800098e:	d102      	bne.n	8000996 <_write_r+0x1e>
 8000990:	682b      	ldr	r3, [r5, #0]
 8000992:	b103      	cbz	r3, 8000996 <_write_r+0x1e>
 8000994:	6023      	str	r3, [r4, #0]
 8000996:	bd38      	pop	{r3, r4, r5, pc}
 8000998:	200001b8 	.word	0x200001b8

0800099c <__errno>:
 800099c:	4b01      	ldr	r3, [pc, #4]	; (80009a4 <__errno+0x8>)
 800099e:	6818      	ldr	r0, [r3, #0]
 80009a0:	4770      	bx	lr
 80009a2:	bf00      	nop
 80009a4:	20000058 	.word	0x20000058

080009a8 <__libc_init_array>:
 80009a8:	b570      	push	{r4, r5, r6, lr}
 80009aa:	4d0d      	ldr	r5, [pc, #52]	; (80009e0 <__libc_init_array+0x38>)
 80009ac:	4c0d      	ldr	r4, [pc, #52]	; (80009e4 <__libc_init_array+0x3c>)
 80009ae:	1b64      	subs	r4, r4, r5
 80009b0:	10a4      	asrs	r4, r4, #2
 80009b2:	2600      	movs	r6, #0
 80009b4:	42a6      	cmp	r6, r4
 80009b6:	d109      	bne.n	80009cc <__libc_init_array+0x24>
 80009b8:	4d0b      	ldr	r5, [pc, #44]	; (80009e8 <__libc_init_array+0x40>)
 80009ba:	4c0c      	ldr	r4, [pc, #48]	; (80009ec <__libc_init_array+0x44>)
 80009bc:	f000 fdc0 	bl	8001540 <_init>
 80009c0:	1b64      	subs	r4, r4, r5
 80009c2:	10a4      	asrs	r4, r4, #2
 80009c4:	2600      	movs	r6, #0
 80009c6:	42a6      	cmp	r6, r4
 80009c8:	d105      	bne.n	80009d6 <__libc_init_array+0x2e>
 80009ca:	bd70      	pop	{r4, r5, r6, pc}
 80009cc:	f855 3b04 	ldr.w	r3, [r5], #4
 80009d0:	4798      	blx	r3
 80009d2:	3601      	adds	r6, #1
 80009d4:	e7ee      	b.n	80009b4 <__libc_init_array+0xc>
 80009d6:	f855 3b04 	ldr.w	r3, [r5], #4
 80009da:	4798      	blx	r3
 80009dc:	3601      	adds	r6, #1
 80009de:	e7f2      	b.n	80009c6 <__libc_init_array+0x1e>
 80009e0:	0800159c 	.word	0x0800159c
 80009e4:	0800159c 	.word	0x0800159c
 80009e8:	0800159c 	.word	0x0800159c
 80009ec:	080015a0 	.word	0x080015a0

080009f0 <__retarget_lock_init_recursive>:
 80009f0:	4770      	bx	lr

080009f2 <__retarget_lock_acquire_recursive>:
 80009f2:	4770      	bx	lr

080009f4 <__retarget_lock_release_recursive>:
 80009f4:	4770      	bx	lr
	...

080009f8 <_free_r>:
 80009f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80009fa:	2900      	cmp	r1, #0
 80009fc:	d044      	beq.n	8000a88 <_free_r+0x90>
 80009fe:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a02:	9001      	str	r0, [sp, #4]
 8000a04:	2b00      	cmp	r3, #0
 8000a06:	f1a1 0404 	sub.w	r4, r1, #4
 8000a0a:	bfb8      	it	lt
 8000a0c:	18e4      	addlt	r4, r4, r3
 8000a0e:	f000 f8df 	bl	8000bd0 <__malloc_lock>
 8000a12:	4a1e      	ldr	r2, [pc, #120]	; (8000a8c <_free_r+0x94>)
 8000a14:	9801      	ldr	r0, [sp, #4]
 8000a16:	6813      	ldr	r3, [r2, #0]
 8000a18:	b933      	cbnz	r3, 8000a28 <_free_r+0x30>
 8000a1a:	6063      	str	r3, [r4, #4]
 8000a1c:	6014      	str	r4, [r2, #0]
 8000a1e:	b003      	add	sp, #12
 8000a20:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000a24:	f000 b8da 	b.w	8000bdc <__malloc_unlock>
 8000a28:	42a3      	cmp	r3, r4
 8000a2a:	d908      	bls.n	8000a3e <_free_r+0x46>
 8000a2c:	6825      	ldr	r5, [r4, #0]
 8000a2e:	1961      	adds	r1, r4, r5
 8000a30:	428b      	cmp	r3, r1
 8000a32:	bf01      	itttt	eq
 8000a34:	6819      	ldreq	r1, [r3, #0]
 8000a36:	685b      	ldreq	r3, [r3, #4]
 8000a38:	1949      	addeq	r1, r1, r5
 8000a3a:	6021      	streq	r1, [r4, #0]
 8000a3c:	e7ed      	b.n	8000a1a <_free_r+0x22>
 8000a3e:	461a      	mov	r2, r3
 8000a40:	685b      	ldr	r3, [r3, #4]
 8000a42:	b10b      	cbz	r3, 8000a48 <_free_r+0x50>
 8000a44:	42a3      	cmp	r3, r4
 8000a46:	d9fa      	bls.n	8000a3e <_free_r+0x46>
 8000a48:	6811      	ldr	r1, [r2, #0]
 8000a4a:	1855      	adds	r5, r2, r1
 8000a4c:	42a5      	cmp	r5, r4
 8000a4e:	d10b      	bne.n	8000a68 <_free_r+0x70>
 8000a50:	6824      	ldr	r4, [r4, #0]
 8000a52:	4421      	add	r1, r4
 8000a54:	1854      	adds	r4, r2, r1
 8000a56:	42a3      	cmp	r3, r4
 8000a58:	6011      	str	r1, [r2, #0]
 8000a5a:	d1e0      	bne.n	8000a1e <_free_r+0x26>
 8000a5c:	681c      	ldr	r4, [r3, #0]
 8000a5e:	685b      	ldr	r3, [r3, #4]
 8000a60:	6053      	str	r3, [r2, #4]
 8000a62:	440c      	add	r4, r1
 8000a64:	6014      	str	r4, [r2, #0]
 8000a66:	e7da      	b.n	8000a1e <_free_r+0x26>
 8000a68:	d902      	bls.n	8000a70 <_free_r+0x78>
 8000a6a:	230c      	movs	r3, #12
 8000a6c:	6003      	str	r3, [r0, #0]
 8000a6e:	e7d6      	b.n	8000a1e <_free_r+0x26>
 8000a70:	6825      	ldr	r5, [r4, #0]
 8000a72:	1961      	adds	r1, r4, r5
 8000a74:	428b      	cmp	r3, r1
 8000a76:	bf04      	itt	eq
 8000a78:	6819      	ldreq	r1, [r3, #0]
 8000a7a:	685b      	ldreq	r3, [r3, #4]
 8000a7c:	6063      	str	r3, [r4, #4]
 8000a7e:	bf04      	itt	eq
 8000a80:	1949      	addeq	r1, r1, r5
 8000a82:	6021      	streq	r1, [r4, #0]
 8000a84:	6054      	str	r4, [r2, #4]
 8000a86:	e7ca      	b.n	8000a1e <_free_r+0x26>
 8000a88:	b003      	add	sp, #12
 8000a8a:	bd30      	pop	{r4, r5, pc}
 8000a8c:	200001c0 	.word	0x200001c0

08000a90 <sbrk_aligned>:
 8000a90:	b570      	push	{r4, r5, r6, lr}
 8000a92:	4e0e      	ldr	r6, [pc, #56]	; (8000acc <sbrk_aligned+0x3c>)
 8000a94:	460c      	mov	r4, r1
 8000a96:	6831      	ldr	r1, [r6, #0]
 8000a98:	4605      	mov	r5, r0
 8000a9a:	b911      	cbnz	r1, 8000aa2 <sbrk_aligned+0x12>
 8000a9c:	f000 fcbc 	bl	8001418 <_sbrk_r>
 8000aa0:	6030      	str	r0, [r6, #0]
 8000aa2:	4621      	mov	r1, r4
 8000aa4:	4628      	mov	r0, r5
 8000aa6:	f000 fcb7 	bl	8001418 <_sbrk_r>
 8000aaa:	1c43      	adds	r3, r0, #1
 8000aac:	d00a      	beq.n	8000ac4 <sbrk_aligned+0x34>
 8000aae:	1cc4      	adds	r4, r0, #3
 8000ab0:	f024 0403 	bic.w	r4, r4, #3
 8000ab4:	42a0      	cmp	r0, r4
 8000ab6:	d007      	beq.n	8000ac8 <sbrk_aligned+0x38>
 8000ab8:	1a21      	subs	r1, r4, r0
 8000aba:	4628      	mov	r0, r5
 8000abc:	f000 fcac 	bl	8001418 <_sbrk_r>
 8000ac0:	3001      	adds	r0, #1
 8000ac2:	d101      	bne.n	8000ac8 <sbrk_aligned+0x38>
 8000ac4:	f04f 34ff 	mov.w	r4, #4294967295
 8000ac8:	4620      	mov	r0, r4
 8000aca:	bd70      	pop	{r4, r5, r6, pc}
 8000acc:	200001c4 	.word	0x200001c4

08000ad0 <_malloc_r>:
 8000ad0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000ad4:	1ccd      	adds	r5, r1, #3
 8000ad6:	f025 0503 	bic.w	r5, r5, #3
 8000ada:	3508      	adds	r5, #8
 8000adc:	2d0c      	cmp	r5, #12
 8000ade:	bf38      	it	cc
 8000ae0:	250c      	movcc	r5, #12
 8000ae2:	2d00      	cmp	r5, #0
 8000ae4:	4607      	mov	r7, r0
 8000ae6:	db01      	blt.n	8000aec <_malloc_r+0x1c>
 8000ae8:	42a9      	cmp	r1, r5
 8000aea:	d905      	bls.n	8000af8 <_malloc_r+0x28>
 8000aec:	230c      	movs	r3, #12
 8000aee:	603b      	str	r3, [r7, #0]
 8000af0:	2600      	movs	r6, #0
 8000af2:	4630      	mov	r0, r6
 8000af4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000af8:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000bcc <_malloc_r+0xfc>
 8000afc:	f000 f868 	bl	8000bd0 <__malloc_lock>
 8000b00:	f8d8 3000 	ldr.w	r3, [r8]
 8000b04:	461c      	mov	r4, r3
 8000b06:	bb5c      	cbnz	r4, 8000b60 <_malloc_r+0x90>
 8000b08:	4629      	mov	r1, r5
 8000b0a:	4638      	mov	r0, r7
 8000b0c:	f7ff ffc0 	bl	8000a90 <sbrk_aligned>
 8000b10:	1c43      	adds	r3, r0, #1
 8000b12:	4604      	mov	r4, r0
 8000b14:	d155      	bne.n	8000bc2 <_malloc_r+0xf2>
 8000b16:	f8d8 4000 	ldr.w	r4, [r8]
 8000b1a:	4626      	mov	r6, r4
 8000b1c:	2e00      	cmp	r6, #0
 8000b1e:	d145      	bne.n	8000bac <_malloc_r+0xdc>
 8000b20:	2c00      	cmp	r4, #0
 8000b22:	d048      	beq.n	8000bb6 <_malloc_r+0xe6>
 8000b24:	6823      	ldr	r3, [r4, #0]
 8000b26:	4631      	mov	r1, r6
 8000b28:	4638      	mov	r0, r7
 8000b2a:	eb04 0903 	add.w	r9, r4, r3
 8000b2e:	f000 fc73 	bl	8001418 <_sbrk_r>
 8000b32:	4581      	cmp	r9, r0
 8000b34:	d13f      	bne.n	8000bb6 <_malloc_r+0xe6>
 8000b36:	6821      	ldr	r1, [r4, #0]
 8000b38:	1a6d      	subs	r5, r5, r1
 8000b3a:	4629      	mov	r1, r5
 8000b3c:	4638      	mov	r0, r7
 8000b3e:	f7ff ffa7 	bl	8000a90 <sbrk_aligned>
 8000b42:	3001      	adds	r0, #1
 8000b44:	d037      	beq.n	8000bb6 <_malloc_r+0xe6>
 8000b46:	6823      	ldr	r3, [r4, #0]
 8000b48:	442b      	add	r3, r5
 8000b4a:	6023      	str	r3, [r4, #0]
 8000b4c:	f8d8 3000 	ldr.w	r3, [r8]
 8000b50:	2b00      	cmp	r3, #0
 8000b52:	d038      	beq.n	8000bc6 <_malloc_r+0xf6>
 8000b54:	685a      	ldr	r2, [r3, #4]
 8000b56:	42a2      	cmp	r2, r4
 8000b58:	d12b      	bne.n	8000bb2 <_malloc_r+0xe2>
 8000b5a:	2200      	movs	r2, #0
 8000b5c:	605a      	str	r2, [r3, #4]
 8000b5e:	e00f      	b.n	8000b80 <_malloc_r+0xb0>
 8000b60:	6822      	ldr	r2, [r4, #0]
 8000b62:	1b52      	subs	r2, r2, r5
 8000b64:	d41f      	bmi.n	8000ba6 <_malloc_r+0xd6>
 8000b66:	2a0b      	cmp	r2, #11
 8000b68:	d917      	bls.n	8000b9a <_malloc_r+0xca>
 8000b6a:	1961      	adds	r1, r4, r5
 8000b6c:	42a3      	cmp	r3, r4
 8000b6e:	6025      	str	r5, [r4, #0]
 8000b70:	bf18      	it	ne
 8000b72:	6059      	strne	r1, [r3, #4]
 8000b74:	6863      	ldr	r3, [r4, #4]
 8000b76:	bf08      	it	eq
 8000b78:	f8c8 1000 	streq.w	r1, [r8]
 8000b7c:	5162      	str	r2, [r4, r5]
 8000b7e:	604b      	str	r3, [r1, #4]
 8000b80:	4638      	mov	r0, r7
 8000b82:	f104 060b 	add.w	r6, r4, #11
 8000b86:	f000 f829 	bl	8000bdc <__malloc_unlock>
 8000b8a:	f026 0607 	bic.w	r6, r6, #7
 8000b8e:	1d23      	adds	r3, r4, #4
 8000b90:	1af2      	subs	r2, r6, r3
 8000b92:	d0ae      	beq.n	8000af2 <_malloc_r+0x22>
 8000b94:	1b9b      	subs	r3, r3, r6
 8000b96:	50a3      	str	r3, [r4, r2]
 8000b98:	e7ab      	b.n	8000af2 <_malloc_r+0x22>
 8000b9a:	42a3      	cmp	r3, r4
 8000b9c:	6862      	ldr	r2, [r4, #4]
 8000b9e:	d1dd      	bne.n	8000b5c <_malloc_r+0x8c>
 8000ba0:	f8c8 2000 	str.w	r2, [r8]
 8000ba4:	e7ec      	b.n	8000b80 <_malloc_r+0xb0>
 8000ba6:	4623      	mov	r3, r4
 8000ba8:	6864      	ldr	r4, [r4, #4]
 8000baa:	e7ac      	b.n	8000b06 <_malloc_r+0x36>
 8000bac:	4634      	mov	r4, r6
 8000bae:	6876      	ldr	r6, [r6, #4]
 8000bb0:	e7b4      	b.n	8000b1c <_malloc_r+0x4c>
 8000bb2:	4613      	mov	r3, r2
 8000bb4:	e7cc      	b.n	8000b50 <_malloc_r+0x80>
 8000bb6:	230c      	movs	r3, #12
 8000bb8:	603b      	str	r3, [r7, #0]
 8000bba:	4638      	mov	r0, r7
 8000bbc:	f000 f80e 	bl	8000bdc <__malloc_unlock>
 8000bc0:	e797      	b.n	8000af2 <_malloc_r+0x22>
 8000bc2:	6025      	str	r5, [r4, #0]
 8000bc4:	e7dc      	b.n	8000b80 <_malloc_r+0xb0>
 8000bc6:	605b      	str	r3, [r3, #4]
 8000bc8:	deff      	udf	#255	; 0xff
 8000bca:	bf00      	nop
 8000bcc:	200001c0 	.word	0x200001c0

08000bd0 <__malloc_lock>:
 8000bd0:	4801      	ldr	r0, [pc, #4]	; (8000bd8 <__malloc_lock+0x8>)
 8000bd2:	f7ff bf0e 	b.w	80009f2 <__retarget_lock_acquire_recursive>
 8000bd6:	bf00      	nop
 8000bd8:	200001bc 	.word	0x200001bc

08000bdc <__malloc_unlock>:
 8000bdc:	4801      	ldr	r0, [pc, #4]	; (8000be4 <__malloc_unlock+0x8>)
 8000bde:	f7ff bf09 	b.w	80009f4 <__retarget_lock_release_recursive>
 8000be2:	bf00      	nop
 8000be4:	200001bc 	.word	0x200001bc

08000be8 <__sfputc_r>:
 8000be8:	6893      	ldr	r3, [r2, #8]
 8000bea:	3b01      	subs	r3, #1
 8000bec:	2b00      	cmp	r3, #0
 8000bee:	b410      	push	{r4}
 8000bf0:	6093      	str	r3, [r2, #8]
 8000bf2:	da08      	bge.n	8000c06 <__sfputc_r+0x1e>
 8000bf4:	6994      	ldr	r4, [r2, #24]
 8000bf6:	42a3      	cmp	r3, r4
 8000bf8:	db01      	blt.n	8000bfe <__sfputc_r+0x16>
 8000bfa:	290a      	cmp	r1, #10
 8000bfc:	d103      	bne.n	8000c06 <__sfputc_r+0x1e>
 8000bfe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000c02:	f000 bb73 	b.w	80012ec <__swbuf_r>
 8000c06:	6813      	ldr	r3, [r2, #0]
 8000c08:	1c58      	adds	r0, r3, #1
 8000c0a:	6010      	str	r0, [r2, #0]
 8000c0c:	7019      	strb	r1, [r3, #0]
 8000c0e:	4608      	mov	r0, r1
 8000c10:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000c14:	4770      	bx	lr

08000c16 <__sfputs_r>:
 8000c16:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c18:	4606      	mov	r6, r0
 8000c1a:	460f      	mov	r7, r1
 8000c1c:	4614      	mov	r4, r2
 8000c1e:	18d5      	adds	r5, r2, r3
 8000c20:	42ac      	cmp	r4, r5
 8000c22:	d101      	bne.n	8000c28 <__sfputs_r+0x12>
 8000c24:	2000      	movs	r0, #0
 8000c26:	e007      	b.n	8000c38 <__sfputs_r+0x22>
 8000c28:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c2c:	463a      	mov	r2, r7
 8000c2e:	4630      	mov	r0, r6
 8000c30:	f7ff ffda 	bl	8000be8 <__sfputc_r>
 8000c34:	1c43      	adds	r3, r0, #1
 8000c36:	d1f3      	bne.n	8000c20 <__sfputs_r+0xa>
 8000c38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000c3c <_vfiprintf_r>:
 8000c3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000c40:	460d      	mov	r5, r1
 8000c42:	b09d      	sub	sp, #116	; 0x74
 8000c44:	4614      	mov	r4, r2
 8000c46:	4698      	mov	r8, r3
 8000c48:	4606      	mov	r6, r0
 8000c4a:	b118      	cbz	r0, 8000c54 <_vfiprintf_r+0x18>
 8000c4c:	6a03      	ldr	r3, [r0, #32]
 8000c4e:	b90b      	cbnz	r3, 8000c54 <_vfiprintf_r+0x18>
 8000c50:	f7ff fdca 	bl	80007e8 <__sinit>
 8000c54:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c56:	07d9      	lsls	r1, r3, #31
 8000c58:	d405      	bmi.n	8000c66 <_vfiprintf_r+0x2a>
 8000c5a:	89ab      	ldrh	r3, [r5, #12]
 8000c5c:	059a      	lsls	r2, r3, #22
 8000c5e:	d402      	bmi.n	8000c66 <_vfiprintf_r+0x2a>
 8000c60:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c62:	f7ff fec6 	bl	80009f2 <__retarget_lock_acquire_recursive>
 8000c66:	89ab      	ldrh	r3, [r5, #12]
 8000c68:	071b      	lsls	r3, r3, #28
 8000c6a:	d501      	bpl.n	8000c70 <_vfiprintf_r+0x34>
 8000c6c:	692b      	ldr	r3, [r5, #16]
 8000c6e:	b99b      	cbnz	r3, 8000c98 <_vfiprintf_r+0x5c>
 8000c70:	4629      	mov	r1, r5
 8000c72:	4630      	mov	r0, r6
 8000c74:	f000 fb78 	bl	8001368 <__swsetup_r>
 8000c78:	b170      	cbz	r0, 8000c98 <_vfiprintf_r+0x5c>
 8000c7a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c7c:	07dc      	lsls	r4, r3, #31
 8000c7e:	d504      	bpl.n	8000c8a <_vfiprintf_r+0x4e>
 8000c80:	f04f 30ff 	mov.w	r0, #4294967295
 8000c84:	b01d      	add	sp, #116	; 0x74
 8000c86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000c8a:	89ab      	ldrh	r3, [r5, #12]
 8000c8c:	0598      	lsls	r0, r3, #22
 8000c8e:	d4f7      	bmi.n	8000c80 <_vfiprintf_r+0x44>
 8000c90:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c92:	f7ff feaf 	bl	80009f4 <__retarget_lock_release_recursive>
 8000c96:	e7f3      	b.n	8000c80 <_vfiprintf_r+0x44>
 8000c98:	2300      	movs	r3, #0
 8000c9a:	9309      	str	r3, [sp, #36]	; 0x24
 8000c9c:	2320      	movs	r3, #32
 8000c9e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000ca2:	f8cd 800c 	str.w	r8, [sp, #12]
 8000ca6:	2330      	movs	r3, #48	; 0x30
 8000ca8:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000e5c <_vfiprintf_r+0x220>
 8000cac:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000cb0:	f04f 0901 	mov.w	r9, #1
 8000cb4:	4623      	mov	r3, r4
 8000cb6:	469a      	mov	sl, r3
 8000cb8:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000cbc:	b10a      	cbz	r2, 8000cc2 <_vfiprintf_r+0x86>
 8000cbe:	2a25      	cmp	r2, #37	; 0x25
 8000cc0:	d1f9      	bne.n	8000cb6 <_vfiprintf_r+0x7a>
 8000cc2:	ebba 0b04 	subs.w	fp, sl, r4
 8000cc6:	d00b      	beq.n	8000ce0 <_vfiprintf_r+0xa4>
 8000cc8:	465b      	mov	r3, fp
 8000cca:	4622      	mov	r2, r4
 8000ccc:	4629      	mov	r1, r5
 8000cce:	4630      	mov	r0, r6
 8000cd0:	f7ff ffa1 	bl	8000c16 <__sfputs_r>
 8000cd4:	3001      	adds	r0, #1
 8000cd6:	f000 80a9 	beq.w	8000e2c <_vfiprintf_r+0x1f0>
 8000cda:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000cdc:	445a      	add	r2, fp
 8000cde:	9209      	str	r2, [sp, #36]	; 0x24
 8000ce0:	f89a 3000 	ldrb.w	r3, [sl]
 8000ce4:	2b00      	cmp	r3, #0
 8000ce6:	f000 80a1 	beq.w	8000e2c <_vfiprintf_r+0x1f0>
 8000cea:	2300      	movs	r3, #0
 8000cec:	f04f 32ff 	mov.w	r2, #4294967295
 8000cf0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000cf4:	f10a 0a01 	add.w	sl, sl, #1
 8000cf8:	9304      	str	r3, [sp, #16]
 8000cfa:	9307      	str	r3, [sp, #28]
 8000cfc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000d00:	931a      	str	r3, [sp, #104]	; 0x68
 8000d02:	4654      	mov	r4, sl
 8000d04:	2205      	movs	r2, #5
 8000d06:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d0a:	4854      	ldr	r0, [pc, #336]	; (8000e5c <_vfiprintf_r+0x220>)
 8000d0c:	f7ff fa68 	bl	80001e0 <memchr>
 8000d10:	9a04      	ldr	r2, [sp, #16]
 8000d12:	b9d8      	cbnz	r0, 8000d4c <_vfiprintf_r+0x110>
 8000d14:	06d1      	lsls	r1, r2, #27
 8000d16:	bf44      	itt	mi
 8000d18:	2320      	movmi	r3, #32
 8000d1a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000d1e:	0713      	lsls	r3, r2, #28
 8000d20:	bf44      	itt	mi
 8000d22:	232b      	movmi	r3, #43	; 0x2b
 8000d24:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000d28:	f89a 3000 	ldrb.w	r3, [sl]
 8000d2c:	2b2a      	cmp	r3, #42	; 0x2a
 8000d2e:	d015      	beq.n	8000d5c <_vfiprintf_r+0x120>
 8000d30:	9a07      	ldr	r2, [sp, #28]
 8000d32:	4654      	mov	r4, sl
 8000d34:	2000      	movs	r0, #0
 8000d36:	f04f 0c0a 	mov.w	ip, #10
 8000d3a:	4621      	mov	r1, r4
 8000d3c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000d40:	3b30      	subs	r3, #48	; 0x30
 8000d42:	2b09      	cmp	r3, #9
 8000d44:	d94d      	bls.n	8000de2 <_vfiprintf_r+0x1a6>
 8000d46:	b1b0      	cbz	r0, 8000d76 <_vfiprintf_r+0x13a>
 8000d48:	9207      	str	r2, [sp, #28]
 8000d4a:	e014      	b.n	8000d76 <_vfiprintf_r+0x13a>
 8000d4c:	eba0 0308 	sub.w	r3, r0, r8
 8000d50:	fa09 f303 	lsl.w	r3, r9, r3
 8000d54:	4313      	orrs	r3, r2
 8000d56:	9304      	str	r3, [sp, #16]
 8000d58:	46a2      	mov	sl, r4
 8000d5a:	e7d2      	b.n	8000d02 <_vfiprintf_r+0xc6>
 8000d5c:	9b03      	ldr	r3, [sp, #12]
 8000d5e:	1d19      	adds	r1, r3, #4
 8000d60:	681b      	ldr	r3, [r3, #0]
 8000d62:	9103      	str	r1, [sp, #12]
 8000d64:	2b00      	cmp	r3, #0
 8000d66:	bfbb      	ittet	lt
 8000d68:	425b      	neglt	r3, r3
 8000d6a:	f042 0202 	orrlt.w	r2, r2, #2
 8000d6e:	9307      	strge	r3, [sp, #28]
 8000d70:	9307      	strlt	r3, [sp, #28]
 8000d72:	bfb8      	it	lt
 8000d74:	9204      	strlt	r2, [sp, #16]
 8000d76:	7823      	ldrb	r3, [r4, #0]
 8000d78:	2b2e      	cmp	r3, #46	; 0x2e
 8000d7a:	d10c      	bne.n	8000d96 <_vfiprintf_r+0x15a>
 8000d7c:	7863      	ldrb	r3, [r4, #1]
 8000d7e:	2b2a      	cmp	r3, #42	; 0x2a
 8000d80:	d134      	bne.n	8000dec <_vfiprintf_r+0x1b0>
 8000d82:	9b03      	ldr	r3, [sp, #12]
 8000d84:	1d1a      	adds	r2, r3, #4
 8000d86:	681b      	ldr	r3, [r3, #0]
 8000d88:	9203      	str	r2, [sp, #12]
 8000d8a:	2b00      	cmp	r3, #0
 8000d8c:	bfb8      	it	lt
 8000d8e:	f04f 33ff 	movlt.w	r3, #4294967295
 8000d92:	3402      	adds	r4, #2
 8000d94:	9305      	str	r3, [sp, #20]
 8000d96:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8000e6c <_vfiprintf_r+0x230>
 8000d9a:	7821      	ldrb	r1, [r4, #0]
 8000d9c:	2203      	movs	r2, #3
 8000d9e:	4650      	mov	r0, sl
 8000da0:	f7ff fa1e 	bl	80001e0 <memchr>
 8000da4:	b138      	cbz	r0, 8000db6 <_vfiprintf_r+0x17a>
 8000da6:	9b04      	ldr	r3, [sp, #16]
 8000da8:	eba0 000a 	sub.w	r0, r0, sl
 8000dac:	2240      	movs	r2, #64	; 0x40
 8000dae:	4082      	lsls	r2, r0
 8000db0:	4313      	orrs	r3, r2
 8000db2:	3401      	adds	r4, #1
 8000db4:	9304      	str	r3, [sp, #16]
 8000db6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000dba:	4829      	ldr	r0, [pc, #164]	; (8000e60 <_vfiprintf_r+0x224>)
 8000dbc:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000dc0:	2206      	movs	r2, #6
 8000dc2:	f7ff fa0d 	bl	80001e0 <memchr>
 8000dc6:	2800      	cmp	r0, #0
 8000dc8:	d03f      	beq.n	8000e4a <_vfiprintf_r+0x20e>
 8000dca:	4b26      	ldr	r3, [pc, #152]	; (8000e64 <_vfiprintf_r+0x228>)
 8000dcc:	bb1b      	cbnz	r3, 8000e16 <_vfiprintf_r+0x1da>
 8000dce:	9b03      	ldr	r3, [sp, #12]
 8000dd0:	3307      	adds	r3, #7
 8000dd2:	f023 0307 	bic.w	r3, r3, #7
 8000dd6:	3308      	adds	r3, #8
 8000dd8:	9303      	str	r3, [sp, #12]
 8000dda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000ddc:	443b      	add	r3, r7
 8000dde:	9309      	str	r3, [sp, #36]	; 0x24
 8000de0:	e768      	b.n	8000cb4 <_vfiprintf_r+0x78>
 8000de2:	fb0c 3202 	mla	r2, ip, r2, r3
 8000de6:	460c      	mov	r4, r1
 8000de8:	2001      	movs	r0, #1
 8000dea:	e7a6      	b.n	8000d3a <_vfiprintf_r+0xfe>
 8000dec:	2300      	movs	r3, #0
 8000dee:	3401      	adds	r4, #1
 8000df0:	9305      	str	r3, [sp, #20]
 8000df2:	4619      	mov	r1, r3
 8000df4:	f04f 0c0a 	mov.w	ip, #10
 8000df8:	4620      	mov	r0, r4
 8000dfa:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000dfe:	3a30      	subs	r2, #48	; 0x30
 8000e00:	2a09      	cmp	r2, #9
 8000e02:	d903      	bls.n	8000e0c <_vfiprintf_r+0x1d0>
 8000e04:	2b00      	cmp	r3, #0
 8000e06:	d0c6      	beq.n	8000d96 <_vfiprintf_r+0x15a>
 8000e08:	9105      	str	r1, [sp, #20]
 8000e0a:	e7c4      	b.n	8000d96 <_vfiprintf_r+0x15a>
 8000e0c:	fb0c 2101 	mla	r1, ip, r1, r2
 8000e10:	4604      	mov	r4, r0
 8000e12:	2301      	movs	r3, #1
 8000e14:	e7f0      	b.n	8000df8 <_vfiprintf_r+0x1bc>
 8000e16:	ab03      	add	r3, sp, #12
 8000e18:	9300      	str	r3, [sp, #0]
 8000e1a:	462a      	mov	r2, r5
 8000e1c:	4b12      	ldr	r3, [pc, #72]	; (8000e68 <_vfiprintf_r+0x22c>)
 8000e1e:	a904      	add	r1, sp, #16
 8000e20:	4630      	mov	r0, r6
 8000e22:	f3af 8000 	nop.w
 8000e26:	4607      	mov	r7, r0
 8000e28:	1c78      	adds	r0, r7, #1
 8000e2a:	d1d6      	bne.n	8000dda <_vfiprintf_r+0x19e>
 8000e2c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000e2e:	07d9      	lsls	r1, r3, #31
 8000e30:	d405      	bmi.n	8000e3e <_vfiprintf_r+0x202>
 8000e32:	89ab      	ldrh	r3, [r5, #12]
 8000e34:	059a      	lsls	r2, r3, #22
 8000e36:	d402      	bmi.n	8000e3e <_vfiprintf_r+0x202>
 8000e38:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000e3a:	f7ff fddb 	bl	80009f4 <__retarget_lock_release_recursive>
 8000e3e:	89ab      	ldrh	r3, [r5, #12]
 8000e40:	065b      	lsls	r3, r3, #25
 8000e42:	f53f af1d 	bmi.w	8000c80 <_vfiprintf_r+0x44>
 8000e46:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000e48:	e71c      	b.n	8000c84 <_vfiprintf_r+0x48>
 8000e4a:	ab03      	add	r3, sp, #12
 8000e4c:	9300      	str	r3, [sp, #0]
 8000e4e:	462a      	mov	r2, r5
 8000e50:	4b05      	ldr	r3, [pc, #20]	; (8000e68 <_vfiprintf_r+0x22c>)
 8000e52:	a904      	add	r1, sp, #16
 8000e54:	4630      	mov	r0, r6
 8000e56:	f000 f879 	bl	8000f4c <_printf_i>
 8000e5a:	e7e4      	b.n	8000e26 <_vfiprintf_r+0x1ea>
 8000e5c:	08001569 	.word	0x08001569
 8000e60:	08001573 	.word	0x08001573
 8000e64:	00000000 	.word	0x00000000
 8000e68:	08000c17 	.word	0x08000c17
 8000e6c:	0800156f 	.word	0x0800156f

08000e70 <_printf_common>:
 8000e70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000e74:	4616      	mov	r6, r2
 8000e76:	4699      	mov	r9, r3
 8000e78:	688a      	ldr	r2, [r1, #8]
 8000e7a:	690b      	ldr	r3, [r1, #16]
 8000e7c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000e80:	4293      	cmp	r3, r2
 8000e82:	bfb8      	it	lt
 8000e84:	4613      	movlt	r3, r2
 8000e86:	6033      	str	r3, [r6, #0]
 8000e88:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000e8c:	4607      	mov	r7, r0
 8000e8e:	460c      	mov	r4, r1
 8000e90:	b10a      	cbz	r2, 8000e96 <_printf_common+0x26>
 8000e92:	3301      	adds	r3, #1
 8000e94:	6033      	str	r3, [r6, #0]
 8000e96:	6823      	ldr	r3, [r4, #0]
 8000e98:	0699      	lsls	r1, r3, #26
 8000e9a:	bf42      	ittt	mi
 8000e9c:	6833      	ldrmi	r3, [r6, #0]
 8000e9e:	3302      	addmi	r3, #2
 8000ea0:	6033      	strmi	r3, [r6, #0]
 8000ea2:	6825      	ldr	r5, [r4, #0]
 8000ea4:	f015 0506 	ands.w	r5, r5, #6
 8000ea8:	d106      	bne.n	8000eb8 <_printf_common+0x48>
 8000eaa:	f104 0a19 	add.w	sl, r4, #25
 8000eae:	68e3      	ldr	r3, [r4, #12]
 8000eb0:	6832      	ldr	r2, [r6, #0]
 8000eb2:	1a9b      	subs	r3, r3, r2
 8000eb4:	42ab      	cmp	r3, r5
 8000eb6:	dc26      	bgt.n	8000f06 <_printf_common+0x96>
 8000eb8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000ebc:	1e13      	subs	r3, r2, #0
 8000ebe:	6822      	ldr	r2, [r4, #0]
 8000ec0:	bf18      	it	ne
 8000ec2:	2301      	movne	r3, #1
 8000ec4:	0692      	lsls	r2, r2, #26
 8000ec6:	d42b      	bmi.n	8000f20 <_printf_common+0xb0>
 8000ec8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000ecc:	4649      	mov	r1, r9
 8000ece:	4638      	mov	r0, r7
 8000ed0:	47c0      	blx	r8
 8000ed2:	3001      	adds	r0, #1
 8000ed4:	d01e      	beq.n	8000f14 <_printf_common+0xa4>
 8000ed6:	6823      	ldr	r3, [r4, #0]
 8000ed8:	6922      	ldr	r2, [r4, #16]
 8000eda:	f003 0306 	and.w	r3, r3, #6
 8000ede:	2b04      	cmp	r3, #4
 8000ee0:	bf02      	ittt	eq
 8000ee2:	68e5      	ldreq	r5, [r4, #12]
 8000ee4:	6833      	ldreq	r3, [r6, #0]
 8000ee6:	1aed      	subeq	r5, r5, r3
 8000ee8:	68a3      	ldr	r3, [r4, #8]
 8000eea:	bf0c      	ite	eq
 8000eec:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000ef0:	2500      	movne	r5, #0
 8000ef2:	4293      	cmp	r3, r2
 8000ef4:	bfc4      	itt	gt
 8000ef6:	1a9b      	subgt	r3, r3, r2
 8000ef8:	18ed      	addgt	r5, r5, r3
 8000efa:	2600      	movs	r6, #0
 8000efc:	341a      	adds	r4, #26
 8000efe:	42b5      	cmp	r5, r6
 8000f00:	d11a      	bne.n	8000f38 <_printf_common+0xc8>
 8000f02:	2000      	movs	r0, #0
 8000f04:	e008      	b.n	8000f18 <_printf_common+0xa8>
 8000f06:	2301      	movs	r3, #1
 8000f08:	4652      	mov	r2, sl
 8000f0a:	4649      	mov	r1, r9
 8000f0c:	4638      	mov	r0, r7
 8000f0e:	47c0      	blx	r8
 8000f10:	3001      	adds	r0, #1
 8000f12:	d103      	bne.n	8000f1c <_printf_common+0xac>
 8000f14:	f04f 30ff 	mov.w	r0, #4294967295
 8000f18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f1c:	3501      	adds	r5, #1
 8000f1e:	e7c6      	b.n	8000eae <_printf_common+0x3e>
 8000f20:	18e1      	adds	r1, r4, r3
 8000f22:	1c5a      	adds	r2, r3, #1
 8000f24:	2030      	movs	r0, #48	; 0x30
 8000f26:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000f2a:	4422      	add	r2, r4
 8000f2c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000f30:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000f34:	3302      	adds	r3, #2
 8000f36:	e7c7      	b.n	8000ec8 <_printf_common+0x58>
 8000f38:	2301      	movs	r3, #1
 8000f3a:	4622      	mov	r2, r4
 8000f3c:	4649      	mov	r1, r9
 8000f3e:	4638      	mov	r0, r7
 8000f40:	47c0      	blx	r8
 8000f42:	3001      	adds	r0, #1
 8000f44:	d0e6      	beq.n	8000f14 <_printf_common+0xa4>
 8000f46:	3601      	adds	r6, #1
 8000f48:	e7d9      	b.n	8000efe <_printf_common+0x8e>
	...

08000f4c <_printf_i>:
 8000f4c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000f50:	7e0f      	ldrb	r7, [r1, #24]
 8000f52:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000f54:	2f78      	cmp	r7, #120	; 0x78
 8000f56:	4691      	mov	r9, r2
 8000f58:	4680      	mov	r8, r0
 8000f5a:	460c      	mov	r4, r1
 8000f5c:	469a      	mov	sl, r3
 8000f5e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000f62:	d807      	bhi.n	8000f74 <_printf_i+0x28>
 8000f64:	2f62      	cmp	r7, #98	; 0x62
 8000f66:	d80a      	bhi.n	8000f7e <_printf_i+0x32>
 8000f68:	2f00      	cmp	r7, #0
 8000f6a:	f000 80d4 	beq.w	8001116 <_printf_i+0x1ca>
 8000f6e:	2f58      	cmp	r7, #88	; 0x58
 8000f70:	f000 80c0 	beq.w	80010f4 <_printf_i+0x1a8>
 8000f74:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000f78:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000f7c:	e03a      	b.n	8000ff4 <_printf_i+0xa8>
 8000f7e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000f82:	2b15      	cmp	r3, #21
 8000f84:	d8f6      	bhi.n	8000f74 <_printf_i+0x28>
 8000f86:	a101      	add	r1, pc, #4	; (adr r1, 8000f8c <_printf_i+0x40>)
 8000f88:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000f8c:	08000fe5 	.word	0x08000fe5
 8000f90:	08000ff9 	.word	0x08000ff9
 8000f94:	08000f75 	.word	0x08000f75
 8000f98:	08000f75 	.word	0x08000f75
 8000f9c:	08000f75 	.word	0x08000f75
 8000fa0:	08000f75 	.word	0x08000f75
 8000fa4:	08000ff9 	.word	0x08000ff9
 8000fa8:	08000f75 	.word	0x08000f75
 8000fac:	08000f75 	.word	0x08000f75
 8000fb0:	08000f75 	.word	0x08000f75
 8000fb4:	08000f75 	.word	0x08000f75
 8000fb8:	080010fd 	.word	0x080010fd
 8000fbc:	08001025 	.word	0x08001025
 8000fc0:	080010b7 	.word	0x080010b7
 8000fc4:	08000f75 	.word	0x08000f75
 8000fc8:	08000f75 	.word	0x08000f75
 8000fcc:	0800111f 	.word	0x0800111f
 8000fd0:	08000f75 	.word	0x08000f75
 8000fd4:	08001025 	.word	0x08001025
 8000fd8:	08000f75 	.word	0x08000f75
 8000fdc:	08000f75 	.word	0x08000f75
 8000fe0:	080010bf 	.word	0x080010bf
 8000fe4:	682b      	ldr	r3, [r5, #0]
 8000fe6:	1d1a      	adds	r2, r3, #4
 8000fe8:	681b      	ldr	r3, [r3, #0]
 8000fea:	602a      	str	r2, [r5, #0]
 8000fec:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000ff0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000ff4:	2301      	movs	r3, #1
 8000ff6:	e09f      	b.n	8001138 <_printf_i+0x1ec>
 8000ff8:	6820      	ldr	r0, [r4, #0]
 8000ffa:	682b      	ldr	r3, [r5, #0]
 8000ffc:	0607      	lsls	r7, r0, #24
 8000ffe:	f103 0104 	add.w	r1, r3, #4
 8001002:	6029      	str	r1, [r5, #0]
 8001004:	d501      	bpl.n	800100a <_printf_i+0xbe>
 8001006:	681e      	ldr	r6, [r3, #0]
 8001008:	e003      	b.n	8001012 <_printf_i+0xc6>
 800100a:	0646      	lsls	r6, r0, #25
 800100c:	d5fb      	bpl.n	8001006 <_printf_i+0xba>
 800100e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8001012:	2e00      	cmp	r6, #0
 8001014:	da03      	bge.n	800101e <_printf_i+0xd2>
 8001016:	232d      	movs	r3, #45	; 0x2d
 8001018:	4276      	negs	r6, r6
 800101a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800101e:	485a      	ldr	r0, [pc, #360]	; (8001188 <_printf_i+0x23c>)
 8001020:	230a      	movs	r3, #10
 8001022:	e012      	b.n	800104a <_printf_i+0xfe>
 8001024:	682b      	ldr	r3, [r5, #0]
 8001026:	6820      	ldr	r0, [r4, #0]
 8001028:	1d19      	adds	r1, r3, #4
 800102a:	6029      	str	r1, [r5, #0]
 800102c:	0605      	lsls	r5, r0, #24
 800102e:	d501      	bpl.n	8001034 <_printf_i+0xe8>
 8001030:	681e      	ldr	r6, [r3, #0]
 8001032:	e002      	b.n	800103a <_printf_i+0xee>
 8001034:	0641      	lsls	r1, r0, #25
 8001036:	d5fb      	bpl.n	8001030 <_printf_i+0xe4>
 8001038:	881e      	ldrh	r6, [r3, #0]
 800103a:	4853      	ldr	r0, [pc, #332]	; (8001188 <_printf_i+0x23c>)
 800103c:	2f6f      	cmp	r7, #111	; 0x6f
 800103e:	bf0c      	ite	eq
 8001040:	2308      	moveq	r3, #8
 8001042:	230a      	movne	r3, #10
 8001044:	2100      	movs	r1, #0
 8001046:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800104a:	6865      	ldr	r5, [r4, #4]
 800104c:	60a5      	str	r5, [r4, #8]
 800104e:	2d00      	cmp	r5, #0
 8001050:	bfa2      	ittt	ge
 8001052:	6821      	ldrge	r1, [r4, #0]
 8001054:	f021 0104 	bicge.w	r1, r1, #4
 8001058:	6021      	strge	r1, [r4, #0]
 800105a:	b90e      	cbnz	r6, 8001060 <_printf_i+0x114>
 800105c:	2d00      	cmp	r5, #0
 800105e:	d04b      	beq.n	80010f8 <_printf_i+0x1ac>
 8001060:	4615      	mov	r5, r2
 8001062:	fbb6 f1f3 	udiv	r1, r6, r3
 8001066:	fb03 6711 	mls	r7, r3, r1, r6
 800106a:	5dc7      	ldrb	r7, [r0, r7]
 800106c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001070:	4637      	mov	r7, r6
 8001072:	42bb      	cmp	r3, r7
 8001074:	460e      	mov	r6, r1
 8001076:	d9f4      	bls.n	8001062 <_printf_i+0x116>
 8001078:	2b08      	cmp	r3, #8
 800107a:	d10b      	bne.n	8001094 <_printf_i+0x148>
 800107c:	6823      	ldr	r3, [r4, #0]
 800107e:	07de      	lsls	r6, r3, #31
 8001080:	d508      	bpl.n	8001094 <_printf_i+0x148>
 8001082:	6923      	ldr	r3, [r4, #16]
 8001084:	6861      	ldr	r1, [r4, #4]
 8001086:	4299      	cmp	r1, r3
 8001088:	bfde      	ittt	le
 800108a:	2330      	movle	r3, #48	; 0x30
 800108c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001090:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001094:	1b52      	subs	r2, r2, r5
 8001096:	6122      	str	r2, [r4, #16]
 8001098:	f8cd a000 	str.w	sl, [sp]
 800109c:	464b      	mov	r3, r9
 800109e:	aa03      	add	r2, sp, #12
 80010a0:	4621      	mov	r1, r4
 80010a2:	4640      	mov	r0, r8
 80010a4:	f7ff fee4 	bl	8000e70 <_printf_common>
 80010a8:	3001      	adds	r0, #1
 80010aa:	d14a      	bne.n	8001142 <_printf_i+0x1f6>
 80010ac:	f04f 30ff 	mov.w	r0, #4294967295
 80010b0:	b004      	add	sp, #16
 80010b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80010b6:	6823      	ldr	r3, [r4, #0]
 80010b8:	f043 0320 	orr.w	r3, r3, #32
 80010bc:	6023      	str	r3, [r4, #0]
 80010be:	4833      	ldr	r0, [pc, #204]	; (800118c <_printf_i+0x240>)
 80010c0:	2778      	movs	r7, #120	; 0x78
 80010c2:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80010c6:	6823      	ldr	r3, [r4, #0]
 80010c8:	6829      	ldr	r1, [r5, #0]
 80010ca:	061f      	lsls	r7, r3, #24
 80010cc:	f851 6b04 	ldr.w	r6, [r1], #4
 80010d0:	d402      	bmi.n	80010d8 <_printf_i+0x18c>
 80010d2:	065f      	lsls	r7, r3, #25
 80010d4:	bf48      	it	mi
 80010d6:	b2b6      	uxthmi	r6, r6
 80010d8:	07df      	lsls	r7, r3, #31
 80010da:	bf48      	it	mi
 80010dc:	f043 0320 	orrmi.w	r3, r3, #32
 80010e0:	6029      	str	r1, [r5, #0]
 80010e2:	bf48      	it	mi
 80010e4:	6023      	strmi	r3, [r4, #0]
 80010e6:	b91e      	cbnz	r6, 80010f0 <_printf_i+0x1a4>
 80010e8:	6823      	ldr	r3, [r4, #0]
 80010ea:	f023 0320 	bic.w	r3, r3, #32
 80010ee:	6023      	str	r3, [r4, #0]
 80010f0:	2310      	movs	r3, #16
 80010f2:	e7a7      	b.n	8001044 <_printf_i+0xf8>
 80010f4:	4824      	ldr	r0, [pc, #144]	; (8001188 <_printf_i+0x23c>)
 80010f6:	e7e4      	b.n	80010c2 <_printf_i+0x176>
 80010f8:	4615      	mov	r5, r2
 80010fa:	e7bd      	b.n	8001078 <_printf_i+0x12c>
 80010fc:	682b      	ldr	r3, [r5, #0]
 80010fe:	6826      	ldr	r6, [r4, #0]
 8001100:	6961      	ldr	r1, [r4, #20]
 8001102:	1d18      	adds	r0, r3, #4
 8001104:	6028      	str	r0, [r5, #0]
 8001106:	0635      	lsls	r5, r6, #24
 8001108:	681b      	ldr	r3, [r3, #0]
 800110a:	d501      	bpl.n	8001110 <_printf_i+0x1c4>
 800110c:	6019      	str	r1, [r3, #0]
 800110e:	e002      	b.n	8001116 <_printf_i+0x1ca>
 8001110:	0670      	lsls	r0, r6, #25
 8001112:	d5fb      	bpl.n	800110c <_printf_i+0x1c0>
 8001114:	8019      	strh	r1, [r3, #0]
 8001116:	2300      	movs	r3, #0
 8001118:	6123      	str	r3, [r4, #16]
 800111a:	4615      	mov	r5, r2
 800111c:	e7bc      	b.n	8001098 <_printf_i+0x14c>
 800111e:	682b      	ldr	r3, [r5, #0]
 8001120:	1d1a      	adds	r2, r3, #4
 8001122:	602a      	str	r2, [r5, #0]
 8001124:	681d      	ldr	r5, [r3, #0]
 8001126:	6862      	ldr	r2, [r4, #4]
 8001128:	2100      	movs	r1, #0
 800112a:	4628      	mov	r0, r5
 800112c:	f7ff f858 	bl	80001e0 <memchr>
 8001130:	b108      	cbz	r0, 8001136 <_printf_i+0x1ea>
 8001132:	1b40      	subs	r0, r0, r5
 8001134:	6060      	str	r0, [r4, #4]
 8001136:	6863      	ldr	r3, [r4, #4]
 8001138:	6123      	str	r3, [r4, #16]
 800113a:	2300      	movs	r3, #0
 800113c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001140:	e7aa      	b.n	8001098 <_printf_i+0x14c>
 8001142:	6923      	ldr	r3, [r4, #16]
 8001144:	462a      	mov	r2, r5
 8001146:	4649      	mov	r1, r9
 8001148:	4640      	mov	r0, r8
 800114a:	47d0      	blx	sl
 800114c:	3001      	adds	r0, #1
 800114e:	d0ad      	beq.n	80010ac <_printf_i+0x160>
 8001150:	6823      	ldr	r3, [r4, #0]
 8001152:	079b      	lsls	r3, r3, #30
 8001154:	d413      	bmi.n	800117e <_printf_i+0x232>
 8001156:	68e0      	ldr	r0, [r4, #12]
 8001158:	9b03      	ldr	r3, [sp, #12]
 800115a:	4298      	cmp	r0, r3
 800115c:	bfb8      	it	lt
 800115e:	4618      	movlt	r0, r3
 8001160:	e7a6      	b.n	80010b0 <_printf_i+0x164>
 8001162:	2301      	movs	r3, #1
 8001164:	4632      	mov	r2, r6
 8001166:	4649      	mov	r1, r9
 8001168:	4640      	mov	r0, r8
 800116a:	47d0      	blx	sl
 800116c:	3001      	adds	r0, #1
 800116e:	d09d      	beq.n	80010ac <_printf_i+0x160>
 8001170:	3501      	adds	r5, #1
 8001172:	68e3      	ldr	r3, [r4, #12]
 8001174:	9903      	ldr	r1, [sp, #12]
 8001176:	1a5b      	subs	r3, r3, r1
 8001178:	42ab      	cmp	r3, r5
 800117a:	dcf2      	bgt.n	8001162 <_printf_i+0x216>
 800117c:	e7eb      	b.n	8001156 <_printf_i+0x20a>
 800117e:	2500      	movs	r5, #0
 8001180:	f104 0619 	add.w	r6, r4, #25
 8001184:	e7f5      	b.n	8001172 <_printf_i+0x226>
 8001186:	bf00      	nop
 8001188:	0800157a 	.word	0x0800157a
 800118c:	0800158b 	.word	0x0800158b

08001190 <__sflush_r>:
 8001190:	898a      	ldrh	r2, [r1, #12]
 8001192:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001196:	4605      	mov	r5, r0
 8001198:	0710      	lsls	r0, r2, #28
 800119a:	460c      	mov	r4, r1
 800119c:	d458      	bmi.n	8001250 <__sflush_r+0xc0>
 800119e:	684b      	ldr	r3, [r1, #4]
 80011a0:	2b00      	cmp	r3, #0
 80011a2:	dc05      	bgt.n	80011b0 <__sflush_r+0x20>
 80011a4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80011a6:	2b00      	cmp	r3, #0
 80011a8:	dc02      	bgt.n	80011b0 <__sflush_r+0x20>
 80011aa:	2000      	movs	r0, #0
 80011ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80011b0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80011b2:	2e00      	cmp	r6, #0
 80011b4:	d0f9      	beq.n	80011aa <__sflush_r+0x1a>
 80011b6:	2300      	movs	r3, #0
 80011b8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80011bc:	682f      	ldr	r7, [r5, #0]
 80011be:	6a21      	ldr	r1, [r4, #32]
 80011c0:	602b      	str	r3, [r5, #0]
 80011c2:	d032      	beq.n	800122a <__sflush_r+0x9a>
 80011c4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80011c6:	89a3      	ldrh	r3, [r4, #12]
 80011c8:	075a      	lsls	r2, r3, #29
 80011ca:	d505      	bpl.n	80011d8 <__sflush_r+0x48>
 80011cc:	6863      	ldr	r3, [r4, #4]
 80011ce:	1ac0      	subs	r0, r0, r3
 80011d0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80011d2:	b10b      	cbz	r3, 80011d8 <__sflush_r+0x48>
 80011d4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80011d6:	1ac0      	subs	r0, r0, r3
 80011d8:	2300      	movs	r3, #0
 80011da:	4602      	mov	r2, r0
 80011dc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80011de:	6a21      	ldr	r1, [r4, #32]
 80011e0:	4628      	mov	r0, r5
 80011e2:	47b0      	blx	r6
 80011e4:	1c43      	adds	r3, r0, #1
 80011e6:	89a3      	ldrh	r3, [r4, #12]
 80011e8:	d106      	bne.n	80011f8 <__sflush_r+0x68>
 80011ea:	6829      	ldr	r1, [r5, #0]
 80011ec:	291d      	cmp	r1, #29
 80011ee:	d82b      	bhi.n	8001248 <__sflush_r+0xb8>
 80011f0:	4a29      	ldr	r2, [pc, #164]	; (8001298 <__sflush_r+0x108>)
 80011f2:	410a      	asrs	r2, r1
 80011f4:	07d6      	lsls	r6, r2, #31
 80011f6:	d427      	bmi.n	8001248 <__sflush_r+0xb8>
 80011f8:	2200      	movs	r2, #0
 80011fa:	6062      	str	r2, [r4, #4]
 80011fc:	04d9      	lsls	r1, r3, #19
 80011fe:	6922      	ldr	r2, [r4, #16]
 8001200:	6022      	str	r2, [r4, #0]
 8001202:	d504      	bpl.n	800120e <__sflush_r+0x7e>
 8001204:	1c42      	adds	r2, r0, #1
 8001206:	d101      	bne.n	800120c <__sflush_r+0x7c>
 8001208:	682b      	ldr	r3, [r5, #0]
 800120a:	b903      	cbnz	r3, 800120e <__sflush_r+0x7e>
 800120c:	6560      	str	r0, [r4, #84]	; 0x54
 800120e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001210:	602f      	str	r7, [r5, #0]
 8001212:	2900      	cmp	r1, #0
 8001214:	d0c9      	beq.n	80011aa <__sflush_r+0x1a>
 8001216:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800121a:	4299      	cmp	r1, r3
 800121c:	d002      	beq.n	8001224 <__sflush_r+0x94>
 800121e:	4628      	mov	r0, r5
 8001220:	f7ff fbea 	bl	80009f8 <_free_r>
 8001224:	2000      	movs	r0, #0
 8001226:	6360      	str	r0, [r4, #52]	; 0x34
 8001228:	e7c0      	b.n	80011ac <__sflush_r+0x1c>
 800122a:	2301      	movs	r3, #1
 800122c:	4628      	mov	r0, r5
 800122e:	47b0      	blx	r6
 8001230:	1c41      	adds	r1, r0, #1
 8001232:	d1c8      	bne.n	80011c6 <__sflush_r+0x36>
 8001234:	682b      	ldr	r3, [r5, #0]
 8001236:	2b00      	cmp	r3, #0
 8001238:	d0c5      	beq.n	80011c6 <__sflush_r+0x36>
 800123a:	2b1d      	cmp	r3, #29
 800123c:	d001      	beq.n	8001242 <__sflush_r+0xb2>
 800123e:	2b16      	cmp	r3, #22
 8001240:	d101      	bne.n	8001246 <__sflush_r+0xb6>
 8001242:	602f      	str	r7, [r5, #0]
 8001244:	e7b1      	b.n	80011aa <__sflush_r+0x1a>
 8001246:	89a3      	ldrh	r3, [r4, #12]
 8001248:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800124c:	81a3      	strh	r3, [r4, #12]
 800124e:	e7ad      	b.n	80011ac <__sflush_r+0x1c>
 8001250:	690f      	ldr	r7, [r1, #16]
 8001252:	2f00      	cmp	r7, #0
 8001254:	d0a9      	beq.n	80011aa <__sflush_r+0x1a>
 8001256:	0793      	lsls	r3, r2, #30
 8001258:	680e      	ldr	r6, [r1, #0]
 800125a:	bf08      	it	eq
 800125c:	694b      	ldreq	r3, [r1, #20]
 800125e:	600f      	str	r7, [r1, #0]
 8001260:	bf18      	it	ne
 8001262:	2300      	movne	r3, #0
 8001264:	eba6 0807 	sub.w	r8, r6, r7
 8001268:	608b      	str	r3, [r1, #8]
 800126a:	f1b8 0f00 	cmp.w	r8, #0
 800126e:	dd9c      	ble.n	80011aa <__sflush_r+0x1a>
 8001270:	6a21      	ldr	r1, [r4, #32]
 8001272:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001274:	4643      	mov	r3, r8
 8001276:	463a      	mov	r2, r7
 8001278:	4628      	mov	r0, r5
 800127a:	47b0      	blx	r6
 800127c:	2800      	cmp	r0, #0
 800127e:	dc06      	bgt.n	800128e <__sflush_r+0xfe>
 8001280:	89a3      	ldrh	r3, [r4, #12]
 8001282:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001286:	81a3      	strh	r3, [r4, #12]
 8001288:	f04f 30ff 	mov.w	r0, #4294967295
 800128c:	e78e      	b.n	80011ac <__sflush_r+0x1c>
 800128e:	4407      	add	r7, r0
 8001290:	eba8 0800 	sub.w	r8, r8, r0
 8001294:	e7e9      	b.n	800126a <__sflush_r+0xda>
 8001296:	bf00      	nop
 8001298:	dfbffffe 	.word	0xdfbffffe

0800129c <_fflush_r>:
 800129c:	b538      	push	{r3, r4, r5, lr}
 800129e:	690b      	ldr	r3, [r1, #16]
 80012a0:	4605      	mov	r5, r0
 80012a2:	460c      	mov	r4, r1
 80012a4:	b913      	cbnz	r3, 80012ac <_fflush_r+0x10>
 80012a6:	2500      	movs	r5, #0
 80012a8:	4628      	mov	r0, r5
 80012aa:	bd38      	pop	{r3, r4, r5, pc}
 80012ac:	b118      	cbz	r0, 80012b6 <_fflush_r+0x1a>
 80012ae:	6a03      	ldr	r3, [r0, #32]
 80012b0:	b90b      	cbnz	r3, 80012b6 <_fflush_r+0x1a>
 80012b2:	f7ff fa99 	bl	80007e8 <__sinit>
 80012b6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012ba:	2b00      	cmp	r3, #0
 80012bc:	d0f3      	beq.n	80012a6 <_fflush_r+0xa>
 80012be:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80012c0:	07d0      	lsls	r0, r2, #31
 80012c2:	d404      	bmi.n	80012ce <_fflush_r+0x32>
 80012c4:	0599      	lsls	r1, r3, #22
 80012c6:	d402      	bmi.n	80012ce <_fflush_r+0x32>
 80012c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80012ca:	f7ff fb92 	bl	80009f2 <__retarget_lock_acquire_recursive>
 80012ce:	4628      	mov	r0, r5
 80012d0:	4621      	mov	r1, r4
 80012d2:	f7ff ff5d 	bl	8001190 <__sflush_r>
 80012d6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80012d8:	07da      	lsls	r2, r3, #31
 80012da:	4605      	mov	r5, r0
 80012dc:	d4e4      	bmi.n	80012a8 <_fflush_r+0xc>
 80012de:	89a3      	ldrh	r3, [r4, #12]
 80012e0:	059b      	lsls	r3, r3, #22
 80012e2:	d4e1      	bmi.n	80012a8 <_fflush_r+0xc>
 80012e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80012e6:	f7ff fb85 	bl	80009f4 <__retarget_lock_release_recursive>
 80012ea:	e7dd      	b.n	80012a8 <_fflush_r+0xc>

080012ec <__swbuf_r>:
 80012ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012ee:	460e      	mov	r6, r1
 80012f0:	4614      	mov	r4, r2
 80012f2:	4605      	mov	r5, r0
 80012f4:	b118      	cbz	r0, 80012fe <__swbuf_r+0x12>
 80012f6:	6a03      	ldr	r3, [r0, #32]
 80012f8:	b90b      	cbnz	r3, 80012fe <__swbuf_r+0x12>
 80012fa:	f7ff fa75 	bl	80007e8 <__sinit>
 80012fe:	69a3      	ldr	r3, [r4, #24]
 8001300:	60a3      	str	r3, [r4, #8]
 8001302:	89a3      	ldrh	r3, [r4, #12]
 8001304:	071a      	lsls	r2, r3, #28
 8001306:	d525      	bpl.n	8001354 <__swbuf_r+0x68>
 8001308:	6923      	ldr	r3, [r4, #16]
 800130a:	b31b      	cbz	r3, 8001354 <__swbuf_r+0x68>
 800130c:	6823      	ldr	r3, [r4, #0]
 800130e:	6922      	ldr	r2, [r4, #16]
 8001310:	1a98      	subs	r0, r3, r2
 8001312:	6963      	ldr	r3, [r4, #20]
 8001314:	b2f6      	uxtb	r6, r6
 8001316:	4283      	cmp	r3, r0
 8001318:	4637      	mov	r7, r6
 800131a:	dc04      	bgt.n	8001326 <__swbuf_r+0x3a>
 800131c:	4621      	mov	r1, r4
 800131e:	4628      	mov	r0, r5
 8001320:	f7ff ffbc 	bl	800129c <_fflush_r>
 8001324:	b9e0      	cbnz	r0, 8001360 <__swbuf_r+0x74>
 8001326:	68a3      	ldr	r3, [r4, #8]
 8001328:	3b01      	subs	r3, #1
 800132a:	60a3      	str	r3, [r4, #8]
 800132c:	6823      	ldr	r3, [r4, #0]
 800132e:	1c5a      	adds	r2, r3, #1
 8001330:	6022      	str	r2, [r4, #0]
 8001332:	701e      	strb	r6, [r3, #0]
 8001334:	6962      	ldr	r2, [r4, #20]
 8001336:	1c43      	adds	r3, r0, #1
 8001338:	429a      	cmp	r2, r3
 800133a:	d004      	beq.n	8001346 <__swbuf_r+0x5a>
 800133c:	89a3      	ldrh	r3, [r4, #12]
 800133e:	07db      	lsls	r3, r3, #31
 8001340:	d506      	bpl.n	8001350 <__swbuf_r+0x64>
 8001342:	2e0a      	cmp	r6, #10
 8001344:	d104      	bne.n	8001350 <__swbuf_r+0x64>
 8001346:	4621      	mov	r1, r4
 8001348:	4628      	mov	r0, r5
 800134a:	f7ff ffa7 	bl	800129c <_fflush_r>
 800134e:	b938      	cbnz	r0, 8001360 <__swbuf_r+0x74>
 8001350:	4638      	mov	r0, r7
 8001352:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001354:	4621      	mov	r1, r4
 8001356:	4628      	mov	r0, r5
 8001358:	f000 f806 	bl	8001368 <__swsetup_r>
 800135c:	2800      	cmp	r0, #0
 800135e:	d0d5      	beq.n	800130c <__swbuf_r+0x20>
 8001360:	f04f 37ff 	mov.w	r7, #4294967295
 8001364:	e7f4      	b.n	8001350 <__swbuf_r+0x64>
	...

08001368 <__swsetup_r>:
 8001368:	b538      	push	{r3, r4, r5, lr}
 800136a:	4b2a      	ldr	r3, [pc, #168]	; (8001414 <__swsetup_r+0xac>)
 800136c:	4605      	mov	r5, r0
 800136e:	6818      	ldr	r0, [r3, #0]
 8001370:	460c      	mov	r4, r1
 8001372:	b118      	cbz	r0, 800137c <__swsetup_r+0x14>
 8001374:	6a03      	ldr	r3, [r0, #32]
 8001376:	b90b      	cbnz	r3, 800137c <__swsetup_r+0x14>
 8001378:	f7ff fa36 	bl	80007e8 <__sinit>
 800137c:	89a3      	ldrh	r3, [r4, #12]
 800137e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001382:	0718      	lsls	r0, r3, #28
 8001384:	d422      	bmi.n	80013cc <__swsetup_r+0x64>
 8001386:	06d9      	lsls	r1, r3, #27
 8001388:	d407      	bmi.n	800139a <__swsetup_r+0x32>
 800138a:	2309      	movs	r3, #9
 800138c:	602b      	str	r3, [r5, #0]
 800138e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001392:	81a3      	strh	r3, [r4, #12]
 8001394:	f04f 30ff 	mov.w	r0, #4294967295
 8001398:	e034      	b.n	8001404 <__swsetup_r+0x9c>
 800139a:	0758      	lsls	r0, r3, #29
 800139c:	d512      	bpl.n	80013c4 <__swsetup_r+0x5c>
 800139e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80013a0:	b141      	cbz	r1, 80013b4 <__swsetup_r+0x4c>
 80013a2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80013a6:	4299      	cmp	r1, r3
 80013a8:	d002      	beq.n	80013b0 <__swsetup_r+0x48>
 80013aa:	4628      	mov	r0, r5
 80013ac:	f7ff fb24 	bl	80009f8 <_free_r>
 80013b0:	2300      	movs	r3, #0
 80013b2:	6363      	str	r3, [r4, #52]	; 0x34
 80013b4:	89a3      	ldrh	r3, [r4, #12]
 80013b6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80013ba:	81a3      	strh	r3, [r4, #12]
 80013bc:	2300      	movs	r3, #0
 80013be:	6063      	str	r3, [r4, #4]
 80013c0:	6923      	ldr	r3, [r4, #16]
 80013c2:	6023      	str	r3, [r4, #0]
 80013c4:	89a3      	ldrh	r3, [r4, #12]
 80013c6:	f043 0308 	orr.w	r3, r3, #8
 80013ca:	81a3      	strh	r3, [r4, #12]
 80013cc:	6923      	ldr	r3, [r4, #16]
 80013ce:	b94b      	cbnz	r3, 80013e4 <__swsetup_r+0x7c>
 80013d0:	89a3      	ldrh	r3, [r4, #12]
 80013d2:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80013d6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80013da:	d003      	beq.n	80013e4 <__swsetup_r+0x7c>
 80013dc:	4621      	mov	r1, r4
 80013de:	4628      	mov	r0, r5
 80013e0:	f000 f850 	bl	8001484 <__smakebuf_r>
 80013e4:	89a0      	ldrh	r0, [r4, #12]
 80013e6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80013ea:	f010 0301 	ands.w	r3, r0, #1
 80013ee:	d00a      	beq.n	8001406 <__swsetup_r+0x9e>
 80013f0:	2300      	movs	r3, #0
 80013f2:	60a3      	str	r3, [r4, #8]
 80013f4:	6963      	ldr	r3, [r4, #20]
 80013f6:	425b      	negs	r3, r3
 80013f8:	61a3      	str	r3, [r4, #24]
 80013fa:	6923      	ldr	r3, [r4, #16]
 80013fc:	b943      	cbnz	r3, 8001410 <__swsetup_r+0xa8>
 80013fe:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001402:	d1c4      	bne.n	800138e <__swsetup_r+0x26>
 8001404:	bd38      	pop	{r3, r4, r5, pc}
 8001406:	0781      	lsls	r1, r0, #30
 8001408:	bf58      	it	pl
 800140a:	6963      	ldrpl	r3, [r4, #20]
 800140c:	60a3      	str	r3, [r4, #8]
 800140e:	e7f4      	b.n	80013fa <__swsetup_r+0x92>
 8001410:	2000      	movs	r0, #0
 8001412:	e7f7      	b.n	8001404 <__swsetup_r+0x9c>
 8001414:	20000058 	.word	0x20000058

08001418 <_sbrk_r>:
 8001418:	b538      	push	{r3, r4, r5, lr}
 800141a:	4d06      	ldr	r5, [pc, #24]	; (8001434 <_sbrk_r+0x1c>)
 800141c:	2300      	movs	r3, #0
 800141e:	4604      	mov	r4, r0
 8001420:	4608      	mov	r0, r1
 8001422:	602b      	str	r3, [r5, #0]
 8001424:	f7ff f83a 	bl	800049c <_sbrk>
 8001428:	1c43      	adds	r3, r0, #1
 800142a:	d102      	bne.n	8001432 <_sbrk_r+0x1a>
 800142c:	682b      	ldr	r3, [r5, #0]
 800142e:	b103      	cbz	r3, 8001432 <_sbrk_r+0x1a>
 8001430:	6023      	str	r3, [r4, #0]
 8001432:	bd38      	pop	{r3, r4, r5, pc}
 8001434:	200001b8 	.word	0x200001b8

08001438 <__swhatbuf_r>:
 8001438:	b570      	push	{r4, r5, r6, lr}
 800143a:	460c      	mov	r4, r1
 800143c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001440:	2900      	cmp	r1, #0
 8001442:	b096      	sub	sp, #88	; 0x58
 8001444:	4615      	mov	r5, r2
 8001446:	461e      	mov	r6, r3
 8001448:	da0d      	bge.n	8001466 <__swhatbuf_r+0x2e>
 800144a:	89a3      	ldrh	r3, [r4, #12]
 800144c:	f013 0f80 	tst.w	r3, #128	; 0x80
 8001450:	f04f 0100 	mov.w	r1, #0
 8001454:	bf0c      	ite	eq
 8001456:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 800145a:	2340      	movne	r3, #64	; 0x40
 800145c:	2000      	movs	r0, #0
 800145e:	6031      	str	r1, [r6, #0]
 8001460:	602b      	str	r3, [r5, #0]
 8001462:	b016      	add	sp, #88	; 0x58
 8001464:	bd70      	pop	{r4, r5, r6, pc}
 8001466:	466a      	mov	r2, sp
 8001468:	f000 f848 	bl	80014fc <_fstat_r>
 800146c:	2800      	cmp	r0, #0
 800146e:	dbec      	blt.n	800144a <__swhatbuf_r+0x12>
 8001470:	9901      	ldr	r1, [sp, #4]
 8001472:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8001476:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 800147a:	4259      	negs	r1, r3
 800147c:	4159      	adcs	r1, r3
 800147e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001482:	e7eb      	b.n	800145c <__swhatbuf_r+0x24>

08001484 <__smakebuf_r>:
 8001484:	898b      	ldrh	r3, [r1, #12]
 8001486:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001488:	079d      	lsls	r5, r3, #30
 800148a:	4606      	mov	r6, r0
 800148c:	460c      	mov	r4, r1
 800148e:	d507      	bpl.n	80014a0 <__smakebuf_r+0x1c>
 8001490:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001494:	6023      	str	r3, [r4, #0]
 8001496:	6123      	str	r3, [r4, #16]
 8001498:	2301      	movs	r3, #1
 800149a:	6163      	str	r3, [r4, #20]
 800149c:	b002      	add	sp, #8
 800149e:	bd70      	pop	{r4, r5, r6, pc}
 80014a0:	ab01      	add	r3, sp, #4
 80014a2:	466a      	mov	r2, sp
 80014a4:	f7ff ffc8 	bl	8001438 <__swhatbuf_r>
 80014a8:	9900      	ldr	r1, [sp, #0]
 80014aa:	4605      	mov	r5, r0
 80014ac:	4630      	mov	r0, r6
 80014ae:	f7ff fb0f 	bl	8000ad0 <_malloc_r>
 80014b2:	b948      	cbnz	r0, 80014c8 <__smakebuf_r+0x44>
 80014b4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80014b8:	059a      	lsls	r2, r3, #22
 80014ba:	d4ef      	bmi.n	800149c <__smakebuf_r+0x18>
 80014bc:	f023 0303 	bic.w	r3, r3, #3
 80014c0:	f043 0302 	orr.w	r3, r3, #2
 80014c4:	81a3      	strh	r3, [r4, #12]
 80014c6:	e7e3      	b.n	8001490 <__smakebuf_r+0xc>
 80014c8:	89a3      	ldrh	r3, [r4, #12]
 80014ca:	6020      	str	r0, [r4, #0]
 80014cc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80014d0:	81a3      	strh	r3, [r4, #12]
 80014d2:	9b00      	ldr	r3, [sp, #0]
 80014d4:	6163      	str	r3, [r4, #20]
 80014d6:	9b01      	ldr	r3, [sp, #4]
 80014d8:	6120      	str	r0, [r4, #16]
 80014da:	b15b      	cbz	r3, 80014f4 <__smakebuf_r+0x70>
 80014dc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80014e0:	4630      	mov	r0, r6
 80014e2:	f000 f81d 	bl	8001520 <_isatty_r>
 80014e6:	b128      	cbz	r0, 80014f4 <__smakebuf_r+0x70>
 80014e8:	89a3      	ldrh	r3, [r4, #12]
 80014ea:	f023 0303 	bic.w	r3, r3, #3
 80014ee:	f043 0301 	orr.w	r3, r3, #1
 80014f2:	81a3      	strh	r3, [r4, #12]
 80014f4:	89a3      	ldrh	r3, [r4, #12]
 80014f6:	431d      	orrs	r5, r3
 80014f8:	81a5      	strh	r5, [r4, #12]
 80014fa:	e7cf      	b.n	800149c <__smakebuf_r+0x18>

080014fc <_fstat_r>:
 80014fc:	b538      	push	{r3, r4, r5, lr}
 80014fe:	4d07      	ldr	r5, [pc, #28]	; (800151c <_fstat_r+0x20>)
 8001500:	2300      	movs	r3, #0
 8001502:	4604      	mov	r4, r0
 8001504:	4608      	mov	r0, r1
 8001506:	4611      	mov	r1, r2
 8001508:	602b      	str	r3, [r5, #0]
 800150a:	f7fe ff9e 	bl	800044a <_fstat>
 800150e:	1c43      	adds	r3, r0, #1
 8001510:	d102      	bne.n	8001518 <_fstat_r+0x1c>
 8001512:	682b      	ldr	r3, [r5, #0]
 8001514:	b103      	cbz	r3, 8001518 <_fstat_r+0x1c>
 8001516:	6023      	str	r3, [r4, #0]
 8001518:	bd38      	pop	{r3, r4, r5, pc}
 800151a:	bf00      	nop
 800151c:	200001b8 	.word	0x200001b8

08001520 <_isatty_r>:
 8001520:	b538      	push	{r3, r4, r5, lr}
 8001522:	4d06      	ldr	r5, [pc, #24]	; (800153c <_isatty_r+0x1c>)
 8001524:	2300      	movs	r3, #0
 8001526:	4604      	mov	r4, r0
 8001528:	4608      	mov	r0, r1
 800152a:	602b      	str	r3, [r5, #0]
 800152c:	f7fe ff9d 	bl	800046a <_isatty>
 8001530:	1c43      	adds	r3, r0, #1
 8001532:	d102      	bne.n	800153a <_isatty_r+0x1a>
 8001534:	682b      	ldr	r3, [r5, #0]
 8001536:	b103      	cbz	r3, 800153a <_isatty_r+0x1a>
 8001538:	6023      	str	r3, [r4, #0]
 800153a:	bd38      	pop	{r3, r4, r5, pc}
 800153c:	200001b8 	.word	0x200001b8

08001540 <_init>:
 8001540:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001542:	bf00      	nop
 8001544:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001546:	bc08      	pop	{r3}
 8001548:	469e      	mov	lr, r3
 800154a:	4770      	bx	lr

0800154c <_fini>:
 800154c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800154e:	bf00      	nop
 8001550:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001552:	bc08      	pop	{r3}
 8001554:	469e      	mov	lr, r3
 8001556:	4770      	bx	lr
